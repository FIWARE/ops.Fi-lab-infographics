<% if @idNode == nil %>
<div class="title">Node not found or not updated</div>
<% else %>
<% content_for :headers do %>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script type='text/javascript' src="https://www.google.com/jsapi"></script>
<script>
  google.load('visualization', '1', {packages:['gauge','corechart']});
</script>
<%end %>
<%= render :partial => "welcome/node/nodeToolbar" %>
<div id="home">
  <div id="errorMessageMap" class="errorMessage"></div>
  <div class="home" id="homeWidgets">     
    <div class="applications">
      <header>
	Map <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgMap" style="height:25px;display:none">
      </header>

      <section class="site_clients_list" id="world-map-nodes" style="padding:0px;">
	<!--<ul>
	  <li>Name: here will go the map of <%= @idNode %></li>
	</ul>-->
      </section>
    </div>
    
    <div class="organizations" id="regionGauges">
      <header>
	General Info <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgGenInfo" style="height:25px;display:none">
      </header>

      <!--<section class="organizations-list" id="generalInfo">
	<ul>
	  <li>Id: <span><%= @idNode %></span></li>
	  <li>Name: <span><%= @nameNode %></span></li>
	  <li>Country: <span id="country"></span></li>
	  <li>Users Number: <span id="users"></span></li>
	  <li>Cores number: <span id="core"></span></li>
	  <li>Cores Enabled number: <span id="coreen"></span></li>
	  <li>Ram (GB): <span id="ram"></span></li>
	  <li>Disk (TB): <span id="disk"></span></li>
	  <li>VMs number: <span id="vm"></span></li>
	  <li>Power consumption: <span id="power"></span></li>
	  <li>Perc. CPU Load: <span id="perccpu"></span></li>
	  <li>Perc. Ram Load: <span id="percram"></span></li>
	  <li>Perc. Disk Load: <span id="percdisk"></span></li>
	</ul>
      </section>-->
      
      <section class="generalInfoContainer">
	  <div class="generalInfosection">
	      <div class="">
		      <div class="leftIcon">
			      <img src="/assets/infographic/iconCpu.png" height="35"/>
		      </div>
		      <div class="leftDetail">
			      <span id="core">0</span> cores
		      </div>
		      <div class="rightDetail" id="coreGauge" style="margin-top:3px;">
		      </div>
		      <div class="clear"></div>
	      </div>
	  </div>

	  <div class="generalInfosection">
	      <div class="">
		      <div class="leftIcon">
			      <img src="/assets/infographic/iconRam.png" height="35"/>			  
		      </div>
		      <div class="leftDetail">
			    <span id="ram">0</span> GB  
		      </div>
		      <div class="rightDetail" id="ramGauge" style="margin-top:3px;">
			    
		      </div>
		      <div class="clear"></div>
	      </div>
	  </div>

	  <div class="generalInfosection">
	      <div class="">
		      <div class="leftIcon">
			      <img src="/assets/infographic/iconDisk.png" height="35"/>
		      </div>
		      <div class="leftDetail">
			      <span id="disk">0</span> TB
		      </div>
		      <div class="rightDetail" id="diskGauge" style="margin-top:3px;">
		      </div>
		      <div class="clear"></div>
	      </div>
	  </div>
      </section>
      
      <!--<div class="section">
	  <div class="headerSection accordionTitle">
		  <div class="leftIcon">
			  <img src="/assets/infographic/iconBattery.png" height="35"/>
		  </div>
		  <div class="rightDetail">
			  <span id="power"></span>
		  </div>
		  <div class="clear"></div>
	  </div>
      </div>-->
    </div>
    
    <div id="errorMessageServices" class="errorMessage"></div>
    
    <div class="services">
      <header>
	Services <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgServices" style="height:25px;display:none">
      </header>

      <section class="services-list">
	<DIV ID="status">
	  <DIV id="tableHeaderContent" CLASS='status-row-min status-row-header-min'>
		<DIV CLASS='field field-header field-header-node-min field-header-service-node'>Node</DIV>
		<!--<DIV CLASS='field field-header field-header-overall'>Overall</DIV>-->
		<DIV CLASS='field field-header field-header-service field-header-service-name'>Nova</DIV>
		<DIV CLASS='field field-header field-header-service field-header-service-name'>Neutron</DIV>
		<DIV CLASS='field field-header field-header-service field-header-service-name'>Cinder</DIV>
		<DIV CLASS='field field-header field-header-service field-header-service-name'>Glance</DIV>
		<DIV CLASS='field field-header field-header-service field-header-service-name'>Keystone P.</DIV>
		<DIV CLASS='field field-header field-header-service field-header-service-name'>Sanity</DIV>
<!-- 		<DIV CLASS='field field-header field-header-support'>Support</DIV> -->
		<div class="clear"></div>
	  </DIV>
	  <DIV id="tableContent">
	      <DIV CLASS='status-row-min row-status-service row-status-closed' id='<%= @idNode %>'>
		  <DIV CLASS='field field-group field-group-expand'>
			  <IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>
		  </DIV>
		  <DIV CLASS='field field-service field-service-node-min <%= @idNode %>'><%= @nameNode %></DIV>	
	      </DIV>
	  </DIV>
	</DIV>
      </section>
    </div>
    
    <div id="errorMessageCalendar" class="errorMessage"></div>
    
    <div class="services">
      <header>
	Sanity Checks <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgSanity" style="height:25px;display:none">
      </header>

      <section class="services-list">
	<DIV ID="sanity">
	
	      <div id="chart-cal" style="width:430px;margin:auto;">
		<div class="datePickerField floatLeft">
		  From: <input type="text" id="datepickerFrom" readonly="readonly" style="background:white;cursor:pointer;"/>
		</div>
		<!--<div class="floatLeft datePickerField">
		  To: <input type="text" id="datepickerTo" readonly="readonly" style="background:white;cursor:pointer;"/> 
		</div>-->
		<div class="floatLeft">
		  <button class="showCalendar">Show</button>
		</div>
		<div class="clear"></div>
	      </div>
	      
	      <div id="chart-content" style="width:585px;margin:auto;">
		<div id="chart-calendar" class="chartVisible"></div>
	      </div>
	</DIV>
      </section>
    </div>
    
    <div id="errorMessageHosts" class="errorMessage"></div>
    <div style="font-size:20px;color:#888;float:left;margin:-26px 0 36px 0;" id="hostsChecking">
		Checking Computing Hosts <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgSanity" style="height:25px;">
    </div>
    <div class="clear"></div>
    
    <div id="errorMessageSupported" class="errorMessage"></div>
	<%
		if @institutions.size
	%>
			<div class="services">
				<header>Supported By</header>

				<section class="services-list">
					<div id="supported" class="parternList">
	<%
						@institutions.each do |institution|
							if institution["link"] != nil
	%>
								<a class="node-institution node-<%= institution["node"] %>" href="<%= institution["link"] %>" target="_blank"><img alt="<%= institution["name"] %>" title="<%= institution["name"] %>" src="/assets/infographic/loghi/<%= institution["logo"] %>"/></a>
	<%
							else
	%>
								<img class="node-institution node-<%= institution["node"] %>" alt="<%= institution["name"] %>" title="<%= institution["name"] %>" src="/assets/infographic/loghi/<%= institution["logo"] %>"/>							
	<%
							end
						end
	%>
					</div>
				</section>
			</div>
	<%
		end
	%>
    
    <!--<div class="services">
      <header>
	Computing Hosts <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgHosts" style="display:none">
      </header>

      <section class="services-list">
	<DIV ID="statusHost">
	  <DIV id="tableHeaderContent" CLASS='status-row status-row-header'>
		<DIV CLASS='field field-header field-header-node'>Host ID</DIV>
 		<DIV CLASS='field field-header field-header-support'>ip</DIV> 
		<DIV CLASS='field field-header field-header-support'>% CPU load</DIV>
		<DIV CLASS='field field-header field-header-support'>% RAM used</DIV>
		<DIV CLASS='field field-header field-header-support'>% Disk used</DIV>
 		<DIV CLASS='field field-header field-header-support'>Sys. up time</DIV> 
		<div class="clear"></div>
	  </DIV>
	  <DIV id="tableContentHost">
	      
	  </DIV>
	</DIV>
      </section>
    </div>-->
  
    <div class="clear"></div>
  </div>
</div>

<% content_for :jsfooter do %>

<script type="text/javascript">

	  var STATUS_OK  = 'green';
	  var STATUS_NOK = 'red';
	  var STATUS_POK = 'yellow';
	  var STATUS_NA  = 'gray';

	  var GREEN  = STATUS_OK ;
	  var RED    = STATUS_NOK;
	  var YELLOW = STATUS_POK;
	  var GRAY   = STATUS_NA;
	  
	  var chart_content_height = null,
	      chart_content_maxwidth = Math.round($('#sanity').width())/*585*//*960,*/;
	  
	  var color = d3.scale.quantize()
	    .domain([-1, 1])
	    .range(d3.range(11).map(function(d) { return "q" + d + "-11"; }));

	  function ChartCalendar() {
	      var year_ini = new Date().getFullYear() - 1,
		  year_end = year_ini + 1,
		  cellSize = 9,/*17,*/
		  height = 100,/*136,*/
		  width = 585;/*chart_content_maxwidth-(0.025641*Math.round($('#sanity').width()));*/

	      var day = d3.time.format("%w"),
		  week = d3.time.format("%U"),
		  format = d3.time.format("%Y-%m-%d"),
		  monthPath = function(t0) {
		      var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
			  d0 = +day(t0), w0 = +week(t0),
			  d1 = +day(t1), w1 = +week(t1);
		      return "M" + (w0 + 1) * cellSize + "," + d0 * cellSize
			  + "H" + w0 * cellSize + "V" + 7 * cellSize
			  + "H" + w1 * cellSize + "V" + (d1 + 1) * cellSize
			  + "H" + (w1 + 1) * cellSize + "V" + 0
			  + "H" + (w0 + 1) * cellSize + "Z";
		  };

	      var svg = d3.select($("#chart-calendar")[0]).selectAll("svg")
		  .data(d3.range(year_ini, year_end + 1))//.data(d3.range(year_ini, year_end + 1))
		  .enter().append("svg")
		  .attr("width", width)
		  .attr("height", height)
		  .attr("class", "RdYlGn")
		  .append("g")
		  .attr("transform", "translate(" + ((width - cellSize * 53) / 2) + "," + (height - cellSize * 7 - 1) + ")");

	      svg.append("text")
		  .attr("transform", "translate(-6," + cellSize * 3.5 + ")rotate(-90)")
		  .style("text-anchor", "middle")
		  .text(function(d) { return d; });

	      this.rect = svg.selectAll(".day")
		  .data(function (d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
		  .enter().append("rect")
		  .attr("class", "day")
		  .attr("width", cellSize)
		  .attr("height", cellSize)
		  .attr("x", function(d) { return week(d) * cellSize; })
		  .attr("y", function(d) { return day(d) * cellSize; })
		  .datum(format);

	      this.rect.append("title")
		  .text(function(d) { return d; });

	      var month = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
	    
	      var legend = svg.selectAll(".legend")
		.data(month)
		.enter().append("g")
		.attr("class", "legend")
		.attr("transform", function(d, i) { return "translate(" + (((i+1) * 39)+0) + ",0)"; });	    

	      legend.append("text")
		.attr("class", function(d,i){ return month[i]+" legend-month" })
		.style("text-anchor", "end")
		.attr("dy", "-.25em")
		.text(function(d,i){ return month[i] });
	      
	      svg.selectAll(".month")
		  .data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
		  .enter().append("path")
		  .attr("class", "month")
		  .attr("d", monthPath);

	      chart_content_height = 220/*(year_end - year_ini + 1) * height*/;
	      d3.select($("#chart-content")[0]).style("height", chart_content_height + "px");
	  }
	
	  ChartCalendar.prototype.numvalue = function(status) {
	    switch (status) {


		case STATUS_OK:  return +1;
		case STATUS_NOK: return -0.8;
		case STATUS_POK:  return 0.0;
		default:         return -1;
	    }
	};

	ChartCalendar.prototype.caption = function(d) {
	    switch (this.historical_data[d]) {
		case +1: return d + ": Sanity status OK";
		case  0: return d + ": Sanity status Partially OK";
		case -0.8: return d + ": Sanity status not OK";
		default: return d + ": Sanity status Undefined";
	    }
	};

	ChartCalendar.prototype.update = function(idNode, data) {
	    var self = this;
	    var dataset = data.map(function(obj) {
		return { 'Date': obj.timestamp.substr(0, 10), 'Value': self.numvalue(obj.FiHealthStatus.value) };
	    });
	    self.idNode = idNode;
	    self.historical_data = d3.nest()
		.key(function(d) { return d.Date; })
		.rollup(function(d) { return d[0].Value; })
		.map(dataset);
		
// 	    clear previous data
	    self.rect.attr("class", "day");
	    self.rect.select("title").text(function(d) { return d; });
// 	    end clear
	    
	    self.rect.filter(function(d) { return d in self.historical_data; })
		.attr("class", function(d) { var colorme=color(self.historical_data[d]);if(colorme=="q10-11") return "day q11-11"; else return "day " + colorme; })
		.select("title")
		.text(function(d) { return self.caption(d); });
	};
	
	var calendar  = new ChartCalendar();
	
	function updateCalendar(idNode,from,to) {
	    $("#imgSanity").show();
	    $( ".showCalendar" ).button().attr('disabled', true);
	    var url = "../api/v1/region/historical/" + idNode;
	    if(from != null && to != null) url += "/from/" + from + "/to/" + to
	    $.ajax ({
		type: "GET",
		url: url,
		contentType: "application/json; charset=utf-8",
		data: {},
		dataType: "json",
		cache: false,
		success: function(json) {
		    calendar.update(idNode, json['measures']);
		    $( ".showCalendar" ).button().attr('disabled', false);
		    $("#imgSanity").hide();
		},
		error: function(xhr, textStatus, errorThrown) {
		    var errors = "<%= FiLabInfographics.nodata %>";
		    if (xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null") {
			errors = xhr.responseText;
		    }
		    $('#errorMessageCalendar').html(errors);
		    $( ".showCalendar" ).button().attr('disabled', false);
		    $("#imgSanity").hide();
		}
	    });
	}
	
	  $(document).ready(function() 
	  {
// 	      $('.infographic').removeClass('active');
// 	      $('.status').removeClass('active');
	      $( "#datepickerFrom" ).datepicker({
			constrainInput: false,
			dateFormat: 'yy-mm-dd',
			maxDate: new Date(),
			minDate: new Date(2015,7,11)
			
	      });
	      
	      var nowDate = new Date();
	      
	      nowDate.setMonth(nowDate.getMonth() - 3);
	      nmonth = nowDate.getMonth()+1;//if (nmonth<10)nmonth="0"+nmonth;
	      nday = nowDate.getDate();//if (nday<10)nday="0"+nday;
	      nowString = nowDate.getFullYear() + "-" + nmonth + "-" + nday;
	      $( "#datepickerFrom" ).datepicker('setDate', nowString);
		      
	      $( ".showCalendar" ).button().click(function(){ 
		      var valFrom = $("#datepickerFrom").val();
		      if(valFrom == null || valFrom == "undefined")
		      {
			  alert("From Date is not valid");
			  return;
		      }
		      var dateFrom = Date.parse( valFrom );
		      
// 		      var valTo = $("#datepickerTo").val();
// 		      var dateTo = Date.parse( valTo );

		      if (isNaN(dateFrom) == true) {
			alert("From Date is not valid");
		      }
// 		      else if (isNaN(dateTo) == true) {
// 			alert("To Date is not valid")
// 		      }
// 		      else if (dateFrom > dateTo) {
// 			alert("To Date must be greater than From Date")
// 		      }
		      else {
			var from = $( "#datepickerFrom" ).datepicker( "getDate" );
			var fmonth = from.getMonth()+1;if (fmonth<10)fmonth="0"+fmonth;
			var fday = from.getDate();if (fday<10)fday="0"+fday;
			var fromString = from.getFullYear() + "-" + fmonth + "-" + fday;
// 			var to = $( "#datepickerTo" ).datepicker( "getDate" );
			var to = new Date();
			var tmonth = to.getMonth()+1;if (month<10)month="0"+month;
			var tday = to.getDate();if (day<10)day="0"+day;
			var toString = to.getFullYear() + "-" + tmonth + "-" + tday;
		      
// 			alert(fromString+" "+toString);
			
			updateCalendar("<%= @idNode %>", fromString, toString);
		      }
				      
		      
	      });
	      
	      $( ".showCalendar" ).button().attr('disabled', true);
	      
	      updateCalendar("<%= @idNode %>", null, null);
		  

	      var selectedMarkers = [];
	      var selectedRegions = [];
		  
	      $('#world-map-nodes').css('width','100%');
	      $('#world-map-nodes').css('height',392);
	      
	      var map = new jvm.WorldMap({
	      container: $('#world-map-nodes'),
	      backgroundColor: 'white',
	      map: 'world_mill_en',
	      regionStyle: {
			initial: {
			  fill: '#999999',
			  "fill-opacity": 1,
			  stroke: 'none',
			  "stroke-width": 0,
			  "stroke-opacity": 1
			},
			hover: {
			  "fill-opacity": 0.8
			},
			selected: {
			      fill: '#0071A4'
			},
			selectedHover: {
			}
	      },
	      markerStyle: {
		    initial: {
		      fill: '#ff9900',
		      stroke: '#383f47'
		    }
	      },
	      onMarkerClick: function(events, index) {
// 		    alert(selectedMarkers[index].name);
		  /*var aTag = $("a[name='"+selectedMarkers[index].name+"']");
		  $('html,body').animate({scrollTop: aTag.offset().top},'slow');
		  $('.field-service').css('text-weight','normal');
		  $('.field-service').css('color','#8C8C8C');
		  $('.'+selectedMarkers[index].name).css('text-weight','bold');
		  $('.'+selectedMarkers[index].name).css('color','black');*/	    
	      }//,
	      /*series: {
			regions: [{values: {"IT":20,"DE":90},
		      // attribute:'fill',
//				      scale: ['#C8EEFF', '#0071A4'],
// 					      scale: {
// 							  84: '#4169E1',
// 							  64: '#FF69B4'
// 							},
//				      normalizeFunction: 'linear'
			}]
	      }	*/		     

	      });
	      
// 	      $('#world-map-nodes').vectorMap('set', 'focus', 5, 0.5, 0.3);
	      map.setFocusLatLng = function(scale, lat, lng){
		  var point,
		      proj = jvm.WorldMap.maps[this.params.map].projection,
		      centralMeridian = proj.centralMeridian,
		      width = this.width - this.baseTransX * 2 * this.baseScale,
		      height = this.height - this.baseTransY * 2 * this.baseScale,
		      inset,
		      bbox,
		      scaleFactor = this.scale / this.baseScale,
		      centerX,
		      centerY;

		  if (lng < (-180 + centralMeridian)) {
		      lng += 360;
		  }

		  point = jvm.Proj[proj.type](lat, lng, centralMeridian);

		  inset = this.getInsetForPoint(point.x, point.y);
		  if (inset) {
		      bbox = inset.bbox;

		      centerX = (point.x - bbox[0].x) / (bbox[1].x - bbox[0].x);
		      centerY = (point.y - bbox[0].y) / (bbox[1].y - bbox[0].y);

		      this.setFocus(scale, centerX, centerY);
		  }
	      }	      

	      $("#imgMap").show();
	      $("#imgGenInfo").show();
	      $("#imgServices").show();


	      function loadNode() 
	      {
		  selectedMarkers = [];
		  
		  var dataRegion_ = "<%= @theNode %>";
		  var dataRegion = JSON.parse(dataRegion_.replace(/&quot;/g,'"'));
		    
		  if(dataRegion != null && dataRegion != "undefined") 
		  {
		      $('#errorMessageMap').html("");
		  
		      var markersData = {};
		      markersData["name"] = dataRegion["name"];
		      
		      if(dataRegion['latitude']!= null && dataRegion['latitude'] != "undefined" &&  dataRegion['latitude'] != "" && dataRegion['longitude']!= null && dataRegion['longitude'] != "undefined" &&  dataRegion['longitude'] != "")
		      {
			map.setFocusLatLng(10, parseFloat(dataRegion['latitude']),parseFloat(dataRegion['longitude']));
			markersData["latLng"] =  [parseFloat(dataRegion['latitude']),parseFloat(dataRegion['longitude'])];
			selectedMarkers.push(markersData);
		      }
		      
		     
		      
	// 			      markersData["style"] = 'rgba(0,0,0,0.5)';

		      if(dataRegion['country']!= null && dataRegion['country'] != "undefined" &&  dataRegion['country'] != "")
		      {
			selectedRegions.push(dataRegion['country']);
		      }
		      
		      map.clearSelectedRegions();
		      map.setSelectedRegions(selectedRegions);
		      
		      
		      
		      map.removeAllMarkers();
		      map.addMarkers(selectedMarkers);
		      
	// 			      $('#country').html(dataRegion['country']);
	// 			      $('#users').html(dataRegion['nb_users']);
		      if(dataRegion['nb_cores']!= null && dataRegion['nb_cores'] != "undefined" &&  dataRegion['nb_cores'] != "")
		      {
			$('#core').html(parseInt(dataRegion['nb_cores']));
		      }
	// 			      $('#coreen').html(parseInt(dataRegion['nb_cores_enabled']));
	
		      if(dataRegion['nb_ram']!= null && dataRegion['nb_ram'] != "undefined" &&  dataRegion['nb_ram'] != "")
		      {
			$('#ram').html((parseInt(dataRegion['nb_ram'])/1024).toFixed(1));
		      }
		      if(dataRegion['nb_disk']!= null && dataRegion['nb_disk'] != "undefined" &&  dataRegion['nb_disk'] != "")
		      {
			$('#disk').html((parseInt(dataRegion['nb_disk'])/1024).toFixed(1));
		      }
	// 			      $('#vm').html(parseInt(dataRegion['nb_vm']));
		      var power_consumption = 0;
		      if (dataRegion['power_consumption']) power_consumption = parseFloat(dataRegion['power_consumption']).toFixed(2);
		      $('#power').html(power_consumption);
	// 			      $('#perccpu').html(parseInt(dataRegion['percCPULoad']));
	// 			      $('#percram').html(parseInt(dataRegion['percRAMUsed']));
	// 			      $('#percdisk').html(parseInt(dataRegion['percDiskUsed']));
		      
		      function drawChart() 
		      {
			var options = {
			  width: 90, height: 110,
			  redFrom: 90, redTo: 100,
			  yellowFrom:75, yellowTo: 90,
			  minorTicks: 5
			};
			
	// 				var percCPULoad = 0;
	// 				if (dataRegion['percCPULoad']) percCPULoad = parseFloat(dataRegion['percCPULoad']).toFixed(2);
	// 				var dataCpu = google.visualization.arrayToDataTable([
	// 				  ['Label', 'Value'],
	// 				  ['%CPU', parseInt(percCPULoad*100)]
	// 				]);
			
			var percRAMUsed = 0;
			if (dataRegion['percRAMUsed']) percRAMUsed = parseFloat(dataRegion['percRAMUsed']).toFixed(2);
			var dataRam = google.visualization.arrayToDataTable([
			  ['Label', 'Value'],
			  ['%RAM', parseInt(percRAMUsed*100)]
				    ]);
			
			var percDiskUsed = 0;
			if (dataRegion['percDiskUsed']) percDiskUsed = parseFloat(dataRegion['percDiskUsed']).toFixed(2);
			var dataDisk = google.visualization.arrayToDataTable([
			  ['Label', 'Value'],
			  ['%Disk', parseInt(percDiskUsed*100)]
				    ]);
			
	// 				var chartCpu = new google.visualization.Gauge(document.getElementById('coreGauge'));
	// 				chartCpu.draw(dataCpu, options);
			
			var chartRam = new google.visualization.Gauge(document.getElementById('ramGauge'));
			chartRam.draw(dataRam, options);
			
			var chartDisk = new google.visualization.Gauge(document.getElementById('diskGauge'));
			chartDisk.draw(dataDisk, options); 
		      };
		      drawChart();
		      
		      $("#imgMap").hide();
		      $("#imgGenInfo").hide();
		      
		      $.ajax (
		      {
			    type: "GET",
			    url: "../../api/v1/region/services/"+"<%= @idNode %>",//to know status services of the region
			    contentType: "application/json; charset=utf-8",
			    data: {},
			    dataType: "json",
			    cache: false,
			    success: function(json){
				
			      var services = json;
			      if(services == null || services == "undefined") 
			      {
				$('#errorMessageServices').html("Empty response");
				$("#imgServices").hide();
				return;
			      }
			      $('#errorMessageServices').html("");
			      
			      var servicesNames = Object.keys(services);
			      

			      //complete table with jira and services status
				
			      
			      
			      var actualTime = Date.now() / 1000;
			      var deltaTime = 10800;
			      var measureTime =( new Date(dataRegion['timestamp']).getTime() / 1000)
			      
			      my_time=new Date(dataRegion['timestamp'])
			      month=my_time.getMonth();if (month<10)month="0"+month;
			      day=my_time.getDay();if (day<10){if (day==0)day=1;day="0"+day};
			      hours=my_time.getHours();if (hours<10)hours="0"+hours;
			      mins=my_time.getMinutes();if (mins<10)mins="0"+mins;
			      the_time=my_time.getFullYear() + "-" + month + "-" + day + "  " + hours + ":" + mins;
			      
			      if (actualTime>(measureTime+deltaTime))
				markersData["name"]=dataRegion['name']+": Last Update on "+the_time;
			      else markersData["name"]=dataRegion['name'];
						  
			      var statusColor;
			      if (actualTime>(measureTime+deltaTime))
			      {
				statusColor = 'rgba(150,150,150,1)';
			      }
			      else
			      {
				if(services['FiHealthStatus']!=null && 
				  services['FiHealthStatus']!="undefined" &&
				  services['FiHealthStatus']['value'] == 1)
				  {
				      switch (services['overallStatus']['value']) {
					    case RED:    statusColor = 'rgba(255,0,0,1.0)';   break;
					    case GREEN:  statusColor = 'rgba(0,255,0,1.0)';   break;
					    case YELLOW: statusColor = 'rgba(255,255,0,1.0)'; break;
					    default:     statusColor = 'rgba(150,150,150,1)';     /*gray*/
				      }
				  }
				  else if(services['FiHealthStatus']!=null && 
				  services['FiHealthStatus']!="undefined")
				  {
				      switch (services['FiHealthStatus']['value']) {
					    case 0.0:    statusColor = 'rgba(255,0,0,1.0)';   break;
					    case 1:  statusColor = 'rgba(0,255,0,1.0)';   break;
					    case 0.75: statusColor = 'rgba(255,255,0,1.0)'; break;
					    default:     statusColor = 'rgba(150,150,150,1)';     /*gray*/
				      }
				  }
				  else statusColor = 'rgba(150,150,150,1)';     /*gray*/
			      }
			      markersData["style"] = {fill: statusColor, r:5};
			      selectedMarkers = [];
			      selectedMarkers.push(markersData);
		      
			      map.removeAllMarkers();
			      map.addMarkers(selectedMarkers);
			      
	// 				      var colorValueOverall = services["overallStatus"]['value'];
			      var colorPng = "";/*colorValueOverall + "light.png";*/
	// 				      if (actualTime>(measureTime+deltaTime) || colorValueOverall == "undefined")colorPng="graylight.png";
			      var allSubRows = ""/*"<DIV CLASS='field field-service field-service-overall'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>"*/;
						  
			      $.each(servicesNames, function( index, value ) {
				if(value != "overallStatus" && value != "FiHealthStatus")
				{
					colorPng = services[value]["value"]+"light.png";
					
					if (actualTime>(measureTime+deltaTime) || services[value]["value"] == "undefined") colorPng="graylight.png";
					allSubRows = allSubRows + "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>";
				}
				else if(value == "FiHealthStatus")
				{
					valuePng = services[value]["value"];
					if(valuePng == 1)
					  colorPng = GREEN+"light.png";
					else if (valuePng == 0.0)
					  colorPng = RED+"light.png";
					else if (valuePng == 0.75)
					  colorPng = YELLOW+"light.png";
					if (actualTime>(measureTime+deltaTime))colorPng="graylight.png";
					allSubRows = allSubRows + "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>";
				}
			      });
			      
			      var jira_url = services["overallStatus"]["jira_project_url"]
			      if( !jira_url) jira_url = "#";
			      
			      $("#"+"<%= @idNode %>").append(allSubRows/*+"<DIV CLASS='field field-service field-service-status-support'>"+
					      "<img src=\"/assets/infographic/help.png\" height=\"30\" onclick=\"var theDialog = $('#atlScriptlet').data('regionSelected','"+"<%= @idNode %>"+"'); theDialog.dialog('open');\" style=\"cursor:pointer;\" title=\"Report an issue\" alt=\"Report an issue\"/>"+
					      "<img src=\"/assets/infographic/jira.png\" height=\"30\" onclick=\"window.location.href ='"+jira_url+"';\" style=\"cursor:pointer;\" title=\"Browse open issues\" alt=\"Browse open issues\"/>"+
				      "</DIV>"*/);
			      $("#tableContent").append("<DIV CLASS='row-messageMin'><div style='overflow-y:auto; height:400px;height: 59px;'>"+services["overallStatus"]['description']+"</div></DIV>");
				      
			      $(".row-messageMin").hide();				  
			      $('.field-group-expand').click( function()
			      {
				      var $image = $(this).children();
				      if( $image.hasClass('collapse' ) )
				      {
					      $image.removeClass('collapse' );
					      $image.addClass('expand' );
				      }
				      else
				      {
					      $image.removeClass('expand' );
					      $image.addClass('collapse' );
				      }
				      var $parent = $(this).parent();
				      
				      var $message = $parent.next(".row-messageMin");
				      $message.slideToggle(function()
				      {
					      if( $parent.hasClass('row-status-closed' ) )
					      {
						      $parent.removeClass('row-status-closed' );
						      $parent.addClass('row-status-opened' );
					      }
					      else
					      {
						      $parent.removeClass('row-status-opened' );
						      $parent.addClass('row-status-closed' );
					      }
				      });
			      });
			      
			      $("#imgServices").hide();
				
			    },
			    error: function(xhr, textStatus, errorThrown){
			    
			    $("#"+"<%= @idNode %>").append("<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-support'>"+
					      "<!--<img src=\"/assets/infographic/help.png\" height=\"30\" onclick=\"var theDialog = $('#atlScriptlet').data('regionSelected','"+"<%= @idNode %>"+"'); theDialog.dialog('open');\" style=\"cursor:pointer;\" title=\"Report an issue\" alt=\"Report an issue\"/>-->"+
					      "<!--<img src=\"/assets/infographic/jira.png\" height=\"30\" onclick=\"window.location.href =jira_url;\" style=\"cursor:pointer;\" title=\"Browse open issues\" alt=\"Browse open issues\"/>-->"+
				      "</DIV>");
			    
			    
			      
			    //put a symbol in the raw to show that it has failed
				var errore = "<%= FiLabInfographics.nodata %>";
				if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
					errore = xhr.responseText;
	// 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
				$('#errorMessageServices').html(errore);
				$("#imgServices").hide();
	//     				alert('request failed->'+textStatus);
	//     				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
			    } 
		      }
		    );
		  }
		  else
		  {
		    $('#errorMessageMap').html("Empty response");
		    $("#imgMap").hide();
		    $("#imgGenInfo").hide();
		  }
	      };
	      loadNode();
			    

	      
	      
		    
// 		    $.ajax (
// 		      {
// 			    type: "GET",
// 			    url: "../../api/v1/region/"+"<%= @idNode %>"+"/vms",//to know list of vms of the region
// 			    contentType: "application/json; charset=utf-8",
// 			    data: {},
// 			    dataType: "json",
// 			    cache: false,
// 			    success: function(json){
// 				
// 			      var totData = json;
// 			      if(totData == null || totData == "undefined") return;
// 			      
// 			      var idVms = totData["total_vms_ids"];
// 			      var idVmsCount = totData["total_vms_count"];
// 			      //draw table with # empty raws
// 			      var allRows = "";
// 			      for (var i=0;i<idVmsCount;i++)
// 			      {
// 				  var theVmId = totData["total_vms_ids"][i];
// 				  allRows = allRows + "<DIV CLASS='status-row row-status-service row-status-closed' id='"+theVmId+"'>"+
// 							    "<DIV CLASS='field field-group field-group-expand'>"+
// 								    "<!--<IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>-->"+
// 							    "</DIV>"+"<a name=\""+theVmId+"\"></a>"+
// 							    "<DIV CLASS='field field-service field-service-node "+theVmId+"'></DIV>"+			
// 						    "</DIV>"
// 			      }
// 			      $('#tableContentVm').html(allRows);
// 			      
// 			      
// 			    },
// 			    error: function(xhr, textStatus, errorThrown){
// 			      //put a symbol in the raw to show that it has failed
// 				var errore = "<%= FiLabInfographics.nodata %>";
// 				if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
// 					errore = xhr.responseText;
// // 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
// 				$('#errorMessage').html(errore);
// //     				alert('request failed->'+textStatus);
// //     				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
// 			    } 
// 		      }
// 		    );

		    $.ajax (
		      {
			    type: "GET",
			    url: "../../api/v1/region/"+"<%= @idNode %>"+"/hosts",//to know list of host of the region
			    contentType: "application/json; charset=utf-8",
			    data: {},
			    dataType: "json",
			    cache: false,
			    success: function(json){
				
				  $('#hostsChecking').hide();
			      var totData = json;
			      if(totData == null || totData == "undefined") 
			      {
				$('#errorMessageHosts').html("Empty response");
				return;
			      }
			      $('#errorMessageHosts').html("");
			      
			      var hosts = totData["total_hosts"];
			      var idHostsCount = totData["total_hosts_count"];
			      //draw table with # empty raws
// 			      $('#tableContentHost').html("");
			      if(idHostsCount > 0) 
			      {
			      $( "#errorMessageHosts" ).after( "<div class=\"services\">"+
				    "<header>"+
				      "Computing Hosts"+
				    "</header>"+

				    "<section class=\"services-list\">"+
				      "<DIV ID=\"statusHost\">"+
					"<DIV id=\"tableHeaderContent\" CLASS='status-row-gauge status-row-header'>"+
					      "<DIV CLASS='field field-header field-header-node-gauge'>Host ID</DIV>"+
					      "<DIV CLASS='field field-header field-header-field' style=\"width: 107px;margin:0\">% CPU load</DIV>"+
					      "<DIV CLASS='field field-header field-header-field'style=\"width: 107px;margin:0\">% RAM used</DIV>"+
					      "<DIV CLASS='field field-header field-header-field'style=\"width: 107px;margin:0\">% Disk used</DIV>"+
					      "<div class=\"clear\"></div>"+
					"</DIV>"+
					"<DIV id=\"tableContentHost\">"+
					    
					"</DIV>"+
				      "</DIV>"+
				    "</section>"+
				  "</div>" );
			      }
			      
			      for (var i=0;i<idHostsCount;i++)
			      {
				  var theHostId = hosts[i]["id"];
				  var allRows ="<DIV CLASS='status-row-gauge row-status-service row-status-closed' id='"+theHostId+"' style='height:98px;'>"+
						    "<DIV CLASS=\"field field-group field-group-expand\"></DIV>"+
						    "<a name=\""+theHostId+"\"></a>"+
						    "<DIV CLASS=\"field field-service field-service-node-gauge "+theHostId+"\" title='"+theHostId+"' style='line-height: 95px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;height: 95px;'>"+theHostId+"</DIV>"+
						    "<DIV CLASS=\"field field-service field-service-gauge\"><div id=\"chart_div_cpu_"+theHostId+"\" style=\"padding-left: 6px\"></div></DIV>"+
					    "<DIV CLASS=\"field field-service field-service-gauge\"><div id=\"chart_div_ram_"+theHostId+"\" style=\"padding-left: 6px\"></div></DIV>"+
					    "<DIV CLASS=\"field field-service field-service-gauge\"><div id=\"chart_div_disk_"+theHostId+"\" style=\"padding-left: 6px\"></div></DIV>"+
				  
				    "<script type='text/javascript'>"+
				    
// 					  "google.load('visualization', '1', {packages:['gauge','corechart']});"+
// 					  "google.setOnLoadCallback(function() {"+
					  "function drawChart_"+String(theHostId).replace(/\W/g, '')+"() {"+
					    "var options = {"+
					      "width: 100, height: 120,"+
					      "redFrom: 90, redTo: 100,"+
					      "yellowFrom:75, yellowTo: 90,"+
					      "minorTicks: 5"+
					    "};"+
					    
					    "var percCPULoad = 0;"+
					    "if ("+hosts[i]["percCPULoad"]+") percCPULoad = parseFloat("+hosts[i]["percCPULoad"]+").toFixed(2);"+
					    "var dataCpu = google.visualization.arrayToDataTable(["+
					      "['Label', 'Value'],"+
					      "['CPU', parseFloat(percCPULoad)]"+
					    "]);"+
					    
					    "var percRAMUsed = 0;"+
					    "if ("+hosts[i]["percRAMUsed"]+") percRAMUsed = parseFloat("+hosts[i]["percRAMUsed"]+").toFixed(2);"+
					    "var dataRam = google.visualization.arrayToDataTable(["+
					      "['Label', 'Value'],"+
					      "['RAM',parseFloat(percRAMUsed)]"
+					    "]);"+
					    
					    "var percDiskUsed = 0;"+
					    "if ("+hosts[i]["percDiskUsed"]+") percDiskUsed = parseFloat("+hosts[i]["percDiskUsed"]+").toFixed(2);"+
					    "var dataDisk = google.visualization.arrayToDataTable(["+
					      "['Label', 'Value'],"+
					      "['Disk',parseFloat(percDiskUsed)]"
+					    "]);"+
					    
					    "var chartCpu = new google.visualization.Gauge(document.getElementById('chart_div_cpu_"+theHostId+"'));"+
					    "chartCpu.draw(dataCpu, options);"+
					    
					    "var chartRam = new google.visualization.Gauge(document.getElementById('chart_div_ram_"+theHostId+"'));"+
					    "chartRam.draw(dataRam, options);"+
					    
					    "var chartDisk = new google.visualization.Gauge(document.getElementById('chart_div_disk_"+theHostId+"'));"+
					    "chartDisk.draw(dataDisk, options);"+ 
					  "};"+
					  "drawChart_"+String(theHostId).replace(/\W/g, '')+"();"
					  
					  
					  
					  
					  
					  +"<\/script>"+
						"</DIV>";
// 						console.log(allRows);
				  $('#tableContentHost').append(allRows);
// 				  console.log(totData["total_hosts_ids"]);
// 				  console.log(i);
// 				  console.log(theHostId);

				 var hostSelector = theHostId.replace(/\./g , "\\.");
				 $('.'+hostSelector).css('cursor','default');			  
			      }
			      
			      
			    },
			    error: function(xhr, textStatus, errorThrown){
			      //put a symbol in the raw to show that it has failed
			    $('#hostsChecking').hide();
				var errore = "<%= FiLabInfographics.nodata %>";
				if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
					errore = xhr.responseText;
// 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
				$('#errorMessageHosts').html(errore);
				$("#imgHosts").hide();
//     				alert('request failed->'+textStatus);
//     				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
			    } 
		      }
		    );
		    
// 		    jsonToSend = {
// 			    'idNode' : "<%= @idNode %>"
// 			};
// 		    $.ajax (
// 			    {
// 				  type: "POST",
// 				  url: "../../api/v1/institution",//to get institutions
// 				  contentType: "application/json; charset=utf-8",
// 				  data: JSON.stringify(jsonToSend),
// 				  dataType: "json",
// 				  cache: false,
// 				  success: function(json){
// 				      
// 				    var institutionsData = json;
// 				    if(institutionsData == null || institutionsData == "undefined") 
// 				    {
// 				      $('#errorMessageSupported').html("Empty response");
// 				      return;
// 				    }
// 				    $('#errorMessageSupported').html("");
// 	  			      
// 				    
// 				    var parternCount = institutionsData.length;
// 				    //draw container 
// 				    if(parternCount > 0) 
// 				    {
// 				    
// 				    
// 				      $( "#errorMessageSupported" ).after( "<div class=\"services\">"+
// 					"<header>"+
// 					  "Supported By"+
// 					"</header>"+
// 
// 					"<section class=\"services-list\">"+
// 					  "<DIV ID=\"supported\" class='parternList'>"+
// 					    
// 					    
// 					  "</DIV>"+
// 					"</section>"+
// 				      "</div>" );
// 				      
// 				      
// 				      
// 				      $.each(institutionsData, function( index, institution ){
// 				      
// 					if(institution["link"]!= null && institution["link"] != "undefined")
// 					  $("#supported").append("<a href=\""+institution["link"]+"\" target=\"_blank\"><img alt=\""+institution["name"]+"\" title=\""+institution["name"]+"\" src=\"/assets/infographic/loghi/"+institution["logo"]+"\"/></a>");
// 					else
// 					  $("#supported").append("<img alt=\""+institution["name"]+"\" title=\""+institution["name"]+"\" src=\"/assets/infographic/loghi/"+institution["logo"]+"\"/>");
// 					});  
// 					
// 				     }
// 				       
// 				  },
// 				  error: function(xhr, textStatus, errorThrown){
// 				    var errore = "<%= FiLabInfographics.nodata %>";
// 				    if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
// 					    errore = xhr.responseText;
// 	  // 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
// 				    $("#errorMessageSupported").html(errore);
// 	  //     				alert('request failed->'+textStatus);
//       //         				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
// // 				    $("#imgHistoryMessages").hide();
// 				  } 
// 			}
// 		      );
	  });
	  
</script>

<%end %>
<%end %>
