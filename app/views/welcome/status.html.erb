<% content_for :headers do %>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<%end %>
<!--
<div class="title">Federation Services <span class="status"><img src="/assets/infographic/graylight.png" height="22"/></span></div>

<DIV ID="status-federation">
		  
	<DIV CLASS='status-row status-row-header'>
		<DIV CLASS='field field-header field-header-federation'>Messages</DIV>
		<DIV CLASS='field field-header field-header-federation'>Cloud Portal</DIV>
		<DIV CLASS='field field-header field-header-federation'>Paas</DIV>
		<DIV CLASS='field field-header field-header-federation'>Monitoring</DIV>
		<DIV CLASS='field field-header field-header-federation'>Keystone Proxy</DIV>
	</DIV>

	<a name="tableNodes"></a>
	<DIV id="tableContentFederation">
		
		<DIV CLASS='status-row row-status-service row-status-closed'>
			
			
			<DIV CLASS='field field-group field-group-federation'>
				<IMG CLASS='field-group-federation-icon sprite expand' SRC='/assets/infographic/blank.gif'>
			</DIV>
			<DIV CLASS='field field-service field-service-status-federation'><img src="/assets/infographic/graylight.png" height="25"/></DIV>
			<DIV CLASS='field field-service field-service-status-federation'><img src="/assets/infographic/graylight.png" height="25"/></DIV>
			<DIV CLASS='field field-service field-service-status-federation'><img src="/assets/infographic/graylight.png" height="25"/></DIV>
			<DIV CLASS='field field-service field-service-status-federation'><img src="/assets/infographic/graylight.png" height="25"/></DIV>		
		</DIV>
		<DIV CLASS='row-message'>
			For the moment there are no messages.
		</DIV>
	</DIV>
			  
</DIV>

-->
  <section class="media-1"><h3 class="media-heading">
      FIWARE Lab Status
    </h3>
    <span>
      FIWARE Lab is a working instance of FIWARE available for experimentation. FIWARE Lab is hosted on multiple nodes across Europe.
    </span>
    <p>
      This page provides a real time status of FIWARE Lab nodes. Some nodes may not be displayed if monitoring probes are not installed.
    </p>
    <%= render :partial => "topbar" %>
  </section>

<div id="error" style="display: none; text-align: center;" class="layoutContainer">
  <span id="errorMessage"></span>
</div>

<div class="layoutContainer">
<div class="row-fluid">
    <div class="span12">
	<div id="map-users-top-container-status">
	  <h3 class="media-heading">
	    Map of FIWARE Node Status
	  </h3>
	   <span>								      
	    This map provides a real time status of FIWARE Lab nodes (represented by a <span style="color:rgba(0,255,0,1.0);font-weight: bold;">green</span>, <span style="color:rgba(255,255,0,1.0);font-weight: bold;">yellow</span>, <span style="color:rgba(255,0,0,1.0);font-weight: bold;">red</span> or <span style="color:rgba(150,150,150,1);font-weight: bold;">gray</span> marker). Note that a gray colour for the marker means that there is no up-to-date data for that node or its services. If you click on a specific node in the map, you can check the FIWARE services status for that node and a calendar graph of the Sanity Check status for the last selected months.
	  </spanp>
	</div>
	<div class="map-container" style="margin-top:0px;">		
	    <div id="world-map-nodes"></div>
	    <div id="loadingMap" class="aftermap">Loading <!--<span id="regionsNum"></span> -->Nodes...</div>
	    <DIV id="buttonShowAll" CLASS="collapsed" style="" onclick="$('.containerWithMargin').removeAttr('style');$(this).addClass('collapsed');$('.row-status-service').removeClass('collapsed');onChartChange('chart-histogram');$('#chart-cal').addClass('chartHidden');$('#chart-hist').show();$('#nodeLink').hide();">
	      Show all FIWARE Lab Nodes Status
	    </DIV>
	</div>
		
    </div>
</div>
<div class="row-fluid roundBottomBorder">
    <div class="span6 myspan">	
<!-- 	<div id="errorMessage"></div> -->
	<div class="containerWithMargin">
	    <div id="table-title" class="chartTitle"><img src="/assets/infographic/iconStatus.png" title="Services Status" alt="Services Status" id="imgStatus" style="width:40px;">FIWARE Lab Nodes Services status <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgServices" style="display:none"></div>
	    <DIV ID="status">
			      
		    <DIV id="tableHeaderContent" CLASS='status-row-min status-row-header-min'>
			    <DIV CLASS='field field-header field-header-node-min field-header-service-node'>Node</DIV>
    <!-- 			<DIV CLASS='field field-header field-header-overall'>Overall</DIV>z -->
			    <DIV CLASS='field field-header field-header-service field-header-service-name'>Nova</DIV>
			    <DIV CLASS='field field-header field-header-service field-header-service-name'>Neutron</DIV>
			    <DIV CLASS='field field-header field-header-service field-header-service-name'>Cinder</DIV>
			    <DIV CLASS='field field-header field-header-service field-header-service-name'>Glance</DIV>
			    <DIV CLASS='field field-header field-header-service field-header-service-name'>Keystone P.</DIV>
			    <DIV CLASS='field field-header field-header-service field-header-service-name'>Sanity</DIV>
			    <!-- <DIV CLASS='field field-header field-header-support'>Support</DIV>-->
		    </DIV>

		    
		    <DIV id="tableContent" style="">
			    
		    </DIV>			  
	    </DIV>	    
	</div>	
	<div class="statusLink" id="nodeLink" style="display:none;">
	  <a href="#" target="_blank">Go to Node Details</a>
	</div>
    </div>
    <div class="span6 myspan">
	<div id="historical" class="containerWithMargin">
	    <div class="chartTitle"><img src="/assets/infographic/iconHealth.png" title="Services Sanity" alt="Services Sanity" id="imgSanity" style="width:40px;"><span id="chart-title">FIWARE Lab Nodes Sanity checks </span><img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgHistorical" style="display:none"></div>
	      <div id="chart-hist">
		<div class="floatLeft datePickerField">
<!-- 		  Data from September 2015. <input type="text" id="datepickerHistogramFrom" readonly="readonly" style="background:white;cursor:pointer;display:none" disabled/> -->
			From: <input type="text" id="datepickerHistogramFrom" readonly="readonly" style="background:white;cursor:pointer;"/>
		</div>
		<div class="floatLeft">
		  <button class="showHistogram">Show</button>
		</div>
		<div class="clear"></div>
	      </div>
	      
	      <div id="chart-cal" class="chartHidden">
		<div class="floatLeft datePickerField">
		  From: <input type="text" id="datepickerFrom" readonly="readonly" style="background:white;cursor:pointer;"/>
		</div>
		<!--<div class="floatLeft datePickerField">
		  To: <input type="text" id="datepickerTo" readonly="readonly" style="background:white;cursor:pointer;"/> 
		</div>-->
		<div class="floatLeft">
		  <button class="showCalendar">Show</button>
		</div>
		<div class="clear"></div>
	      </div>
	    <!--<div id="chart-options" class="chartOptions">
		Chart type <%= select_tag(:chart_id,
			options_for_select([
			    [ "Histogram",          "chart-histogram" ],
			    [ "Calendar per node",  "chart-calendar"  ]
			], "chart-histogram"),
			:onchange => "onChartChange(this.value)") %>
	    </div>-->
	    <div id="chart-content">
		<div id="chart-calendar" class="chartHidden"></div>
		<div id="chart-histogram" class="chartVisible"></div>
	    </div>	    
	</div>
	<div class="statusLink">
	  <a href="https://fi-health.lab.fiware.org/" target="_blank">Go to Sanity Checks</a>
	</div>
    </div>
</div>
</div>


<% content_for :jsfooter do %>
  <script type="text/javascript">

	var semaforo = 1;
	var STATUS_OK  = "<%= STATUS_OK %>",
	    STATUS_NOK = "<%= STATUS_NOK %>",
	    STATUS_POK = "<%= STATUS_POK %>",
	    STATUS_NA = "<%= STATUS_NA %>";
	    
	var GREEN  = STATUS_OK ;
    var RED    = STATUS_NOK;
	var YELLOW = STATUS_POK;
	var GRAY   = 'gray';

	var selected_chart_id = "chart-histogram";
	var selected_node_id = null;
	var selected_node_name = null;

	var chart_content = d3.select($("#chart-content")[0]).selectAll("div"),
	    chart_content_height = null,
	    chart_content_maxwidth = Math.round($('.span6').width()),/*585*//*960,*/
	    map_nodes_width = 585;

	var color = d3.scale.quantize()
	    .domain([-1, 1])
	    .range(d3.range(11).map(function(d) { return "q" + d + "-11"; }));

	function ChartCalendar() {
	    var year_ini = new Date().getFullYear() - 1,
		year_end = year_ini + 1,
		cellSize = 9,/*17,*/
		height = 100,/*136,*/
		width = chart_content_maxwidth-(0.025641*Math.round($('.span6').width()));

	    var day = d3.time.format("%w"),
		week = d3.time.format("%U"),
		format = d3.time.format("%Y-%m-%d"),
		monthPath = function(t0) {
		    var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),
			d0 = +day(t0), w0 = +week(t0),
			d1 = +day(t1), w1 = +week(t1);
		    return "M" + (w0 + 1) * cellSize + "," + d0 * cellSize
			+ "H" + w0 * cellSize + "V" + 7 * cellSize
			+ "H" + w1 * cellSize + "V" + (d1 + 1) * cellSize
			+ "H" + (w1 + 1) * cellSize + "V" + 0
			+ "H" + (w0 + 1) * cellSize + "Z";
		};

	    var svg = d3.select($("#chart-calendar")[0]).selectAll("svg")
		.data(d3.range(year_ini, year_end + 1))//.data(d3.range(year_ini, year_end + 1))
		.enter().append("svg")
		.attr("width", width)
		.attr("height", height)
		.attr("class", "RdYlGn")
		.append("g")
		.attr("transform", "translate(" + ((width - cellSize * 53) / 2) + "," + (height - cellSize * 7 - 1) + ")");

	    svg.append("text")
		.attr("transform", "translate(-6," + cellSize * 3.5 + ")rotate(-90)")
		.style("text-anchor", "middle")
		.text(function(d) { return d; });

	    this.rect = svg.selectAll(".day")
		.data(function (d) { return d3.time.days(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
		.enter().append("rect")
		.attr("class", "day")
		.attr("width", cellSize)
		.attr("height", cellSize)
		.attr("x", function(d) { return week(d) * cellSize; })
		.attr("y", function(d) { return day(d) * cellSize; })
		.datum(format);

	    this.rect.append("title")
		.text(function(d) { return d; });

	    var month = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
	    
	    var legend = svg.selectAll(".legend")
	      .data(month)
	      .enter().append("g")
	      .attr("class", "legend")
	      .attr("transform", function(d, i) { return "translate(" + (((i+1) * 39)+0) + ",0)"; });	    

	    legend.append("text")
	      .attr("class", function(d,i){ return month[i]+" legend-month" })
	      .style("text-anchor", "end")
	      .attr("dy", "-.25em")
	      .text(function(d,i){ return month[i] });
	      
	    svg.selectAll(".month")
		.data(function(d) { return d3.time.months(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })
		.enter().append("path")
		.attr("class", "month")
		.attr("d", monthPath);

	    chart_content_height = 310/*(year_end - year_ini + 1) * height*/;
	    d3.select($("#chart-content")[0]).style("height", chart_content_height + "px");
	}

	ChartCalendar.prototype.numvalue = function(status) {
	    switch (status) {


		case STATUS_OK:  return +1;
		case STATUS_NOK: return -0.8;
		case STATUS_POK:  return 0.0;
		default:         return -1;
	    }
	};

	ChartCalendar.prototype.caption = function(d) {
	    switch (this.historical_data[d]) {
		case +1: return d + ": Sanity status OK";
		case  0: return d + ": Sanity status Partially OK";
		case -0.8: return d + ": Sanity status not OK";
		default: return d + ": Sanity status Undefined";
	    }
	};

	ChartCalendar.prototype.update = function(idNode, nameNode, data) {
	    var self = this;
	    var dataset = data.map(function(obj) {
		return { 'Date': obj.timestamp.substr(0, 10), 'Value': self.numvalue(obj.FiHealthStatus.value) };
	    });
	    self.idNode = idNode;
	    self.nameNode = nameNode;
	    self.historical_data = d3.nest()
		.key(function(d) { return d.Date; })
		.rollup(function(d) { return d[0].Value; })
		.map(dataset);
		
// 	    clear previous data
	    self.rect.attr("class", "day");
	    self.rect.select("title").text(function(d) { return d; });
// 	    end clear
	    
	    self.rect.filter(function(d) { return d in self.historical_data; })
		.attr("class", function(d) { var colorme=color(self.historical_data[d]);if(colorme=="q10-11") return "day q11-11"; else return "day " + colorme; })
		.select("title")
		.text(function(d) { return self.caption(d); });
	};

	function ChartHistogram() {
	    var margin = { top: 30, right: 20, bottom: 80, left: 40 };

// 	    this.width = map_nodes_width - margin.left - margin.right;
// 	    this.height = chart_content_height - margin.top - margin.bottom;
	    this.height = 236,
	    this.width = chart_content_maxwidth- margin.left - margin.right;

	    this.x = d3.scale.ordinal()
		.rangeRoundBands([0, this.width], .1);

	    this.y = d3.scale.linear()
		.range([this.height, 0]);

	    this.xAxis = d3.svg.axis()
		.scale(this.x)
		.orient("bottom");

	    this.yAxis = d3.svg.axis()
		.scale(this.y)
		.orient("left")
		.ticks(10, "%");

	    d3.select($("#chart-histogram")[0]).append("svg")
		.attr("width", this.width + margin.left + margin.right)
		.attr("height", this.height + margin.top + margin.bottom)
		.attr("class", "RdYlGn")
		.append("g")
		.attr("transform", "translate(" + margin.left + "," + margin.top + ")")
		.append("text")
		.attr("y", -10)
		.attr("dy", ".30em")
		.style("text-anchor", "end")
		.style("font-size", "x-small");
		//.text("Success");
	}

	ChartHistogram.prototype.update = function(data) {
// 	clean chart
	    var svg = d3.select($("#chart-histogram")[0]).select("svg").select("g");
	    svg.selectAll(".bar").remove();
	    svg.selectAll("text").remove();
	    svg.selectAll("line").remove();
	    
	    var self = this;
	    self.x.domain(data.map(function(d) { 
			return d.nameNode;
// 	    var region_name=d.nameNode;
// 	    if (d.idNode=="Lannion2")
// 	      region_name="Lannion"
// 	    else if (d.idNode=="Berlin2")
// 	      region_name="Berlin"
// 	    else if (d.idNode=="Spain2")
// 	      region_name="Spain"
// 	    else if (d.idNode=="Karlskrona2")
// 	      region_name="Karlskrona"
// 	    else if (d.idNode=="Budapest2")
// 	      region_name="Budapest"
// 	    else if (d.idNode=="Stockholm2")
// 	      region_name="Stockholm"
// 	    else if (d.idNode=="Trento2")
// 	      region_name="Trento"

// 	    return region_name 
		}));
	    self.y.domain([0, d3.max(data, function(d) { return d.success; })]);

	    var svg = d3.select($("#chart-histogram")[0]).select("svg").select("g");

	    svg.append("g")
		.attr("class", "x axis")
		.attr("transform", "translate(0," + self.height + ")")
		.call(self.xAxis)
		.selectAll("text")
		.style("text-anchor", "end")
		.attr("dx", "-.8em")
		.attr("dy", ".15em")
		.attr("transform", "rotate(-60)");

	    svg.append("g")
		.attr("class", "y axis")
		.call(self.yAxis);

	    svg.selectAll(".bar")
		.data(data)
		.enter().append("rect")
		.attr("class", function(d) { return "bar " + color(-1 + d.success * 2.0); })
		.attr("x", function(d) { 
// 		  var region_name_in=d.idNode
// 		  if (d.idNode=="Lannion2")
// 		    region_name_in="Lannion"
// 		  else if (d.idNode=="Berlin2")
// 		    region_name_in="Berlin"
// 		  else if (d.idNode=="Spain2")
// 		    region_name_in="Spain"
// 		  else if (d.idNode=="Karlskrona2")
// 		    region_name_in="Karlskrona"
// 		  else if (d.idNode=="Budapest2")
// 		    region_name_in="Budapest"
// 		  else if (d.idNode=="Stockholm2")
// 		    region_name_in="Stockholm"
// 		  else if (d.idNode=="Trento2")
// 		    region_name_in="Trento"
// 		return self.x(region_name_in); 
		return self.x(d.nameNode)
		})
		.attr("width", self.x.rangeBand())
		.attr("y", function(d) { return self.y(d.success); })
		.attr("height", function(d) { return self.height - self.y(d.success); });
	};

	var calendar  = new ChartCalendar(),
	    histogram = new ChartHistogram();

	function onChartChange(id) {
	    var titleSuffix = '',
		makeVisible = false;

	    chart_content.filter('#' + selected_chart_id).attr("class", "chartHidden");
	    switch (selected_chart_id = id) {
		case 'chart-calendar':
		    if (calendar.nameNode) {
			var region = calendar.nameNode;
// 			if (region=="Lannion2")
// 			  region="Lannion"
// 			else if (region=="Berlin2")
// 			  region="Berlin"
// 			else if (region=="Spain2")
// 			  region="Spain"
// 			else if (region=="Karlskrona2")
// 			  region="Karlskrona"
// 			else if (region=="Budapest2")
// 			  region="Budapest"
// 			else if (region=="Stockholm2")
// 			  region="Stockholm"
// 			else if (region=="Trento2")
// 			  region="Trento"
		    
			titleSuffix = ' for ' + region;// + '<img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgHistorical">';
			makeVisible = true;
			$("#chart-content").css("height", 200+"px");			
			$(".containerWithMargin").animate({height:300+"px"}, 500);
		    }
		    break;
		case 'chart-histogram':
// 		    titleSuffix = ' <img src="/assets/infographic/spinner.gif" title="Loading..." alt="Loading..." id="imgHistorical">';

		    $("#chart-content").css("height", chart_content_height+"px");
		    makeVisible = true;
		    break;
	    }
	    if (makeVisible) chart_content.filter('#' + selected_chart_id).attr("class", "chartVisible");
	    $('#chart-title').html('FIWARE Lab Nodes Sanity checks' + titleSuffix);
	}

	function updateCalendar(idNode, nameNode, from, to) {
	    $("#imgHistorical").show();
	    $( ".showCalendar" ).button().attr('disabled', true);
	    var url = "../api/v1/region/historical/" + idNode;
	    if(from != null && to != null) url += "/from/" + from + "/to/" + to
	    $.ajax ({
		type: "GET",
		url: url,
		contentType: "application/json; charset=utf-8",
		data: {},
		dataType: "json",
		cache: false,
		success: function(json) {
		    calendar.update(idNode, nameNode, json['measures']);
		    onChartChange('chart-calendar');
		    $( ".showCalendar" ).button().attr('disabled', false);
		    $("#imgHistorical").hide();
		},
		error: function(xhr, textStatus, errorThrown) {
		    var errors = "<%= FiLabInfographics.nodata %>";
		    if (xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null") {
			errors = xhr.responseText;
		    }
		    $('#errorMessage').html(errors);
		    $( ".showCalendar" ).button().attr('disabled', false);
		    $("#imgHistorical").hide();
		}
	    });
	}

	  $(document).ready(function() 
	  {
		  var contextPath = "";
		  
		  $('.infographic').removeClass('active');
		  $('.status').addClass('active');
		  
		  $('#world-map-nodes').css('width',Math.round($('.span12').width()));
		  $('#world-map-nodes').css('height',Math.round($('.span12').width()*300/545));
		  
		  $("#chart-histogram").hover(function() {
		      $(this).css('cursor','auto').attr('title', 'This histogram displays nodes sanity success percentage, from the selected date to now.');
		  }, function() {
		      $(this).css('cursor','auto');
		  }); 
		  
		  $( "#datepickerFrom" ).datepicker({
		    constrainInput: false,
		    dateFormat: 'yy-mm-dd',
		    maxDate: new Date(),
		    minDate: new Date(2015,7,11),
		    beforeShow : function(input, inst) {

			inst.dpDiv.removeClass('calendar-off');
		    }
		    
		  });
		  var d=new Date(); // current date
		  d.setDate(1); // going to 1st of the month
		  d.setHours(-1); // going to last hour before this date even started.
// 		  $( "#datepickerHistogramFrom" ).datepicker({
// 		    constrainInput: false,
// 		    dateFormat: 'yy-mm-dd',
// 		    maxDate: d,
// 		    minDate: new Date(2015,6,1)
// 		    
// 		  });
		  var nowDate = new Date();
		  
		  nowDate.setMonth(nowDate.getMonth() - 6);
		  var nmonth = nowDate.getMonth()+1;//if (nmonth<10)nmonth="0"+nmonth;
		  var nday = nowDate.getDate();//if (nday<10)nday="0"+nday;
		  var nowString = nowDate.getFullYear() + "-" + nmonth;
		  
		  function updateDatepicker(dp) {
		      setTimeout(function () {
			  var month = $(".ui-datepicker-month").val();
			  var year = $(".ui-datepicker-year").val();
			  var monthInt = parseInt(month) + 1;
			  if(monthInt < 10) month = "0"+monthInt;
			  else month = ""+monthInt;
			  dp.val(year+"-"+month);
			  console.log(year+"-"+month); 
			  $('.date-picker').focusout()//Added to remove focus from datepicker input box on selecting date
		      }, 0);
		  }  
		  
		  $( "#datepickerHistogramFrom" ).datepicker({
				dateFormat: "yy-mm",
                changeMonth: true,
                changeYear: true,
                showButtonPanel: false,
                maxDate: d,
				minDate: new Date(2015,7,1),
				defaultDate: new Date(nowDate.getFullYear(), nmonth, 1),
                onChangeMonthYear: function(year, month, inst) {
					updateDatepicker($(this));    
                },
                beforeShow : function(input, inst) {

                    inst.dpDiv.addClass('calendar-off');
// 			    $(".ui-datepicker-calendar").hide();
                }		    
		  });
		  
		  $( "#datepickerHistogramFrom" ).datepicker('setDate', new Date(nowDate.getFullYear(), nmonth, 1));
// 		$( "#datepickerHistogramFrom" ).datepicker('setDate', new Date(2015, 8, 1));
// 		$( "#datepickerHistogramFrom" ).datepicker( "option", "disabled", true );
// 		  alert(new Date(nowDate.getFullYear(), nmonth, 1));
// 		  $( "#datepickerTo" ).datepicker({
// 		    constrainInput: false,
// 		    dateFormat: 'yy-mm-dd',
// 		    maxDate: new Date(),
// 		    minDate: new Date()//new Date(2015,7,11)
// 		  });

		  
		  $( ".showCalendar" ).button().click(function(){ 
		      var valFrom = $("#datepickerFrom").val();
		      if(valFrom == null || valFrom == "undefined")
		      {
				alert("From Date is not valid");
				return;
		      }
		      var dateFrom = Date.parse( valFrom );
		      
// 		      var valTo = $("#datepickerTo").val();
// 		      var dateTo = Date.parse( valTo );

		      if (isNaN(dateFrom) == true) {
				alert("From Date is not valid");
		      }
// 		      else if (isNaN(dateTo) == true) {
// 			alert("To Date is not valid")
// 		      }
// 		      else if (dateFrom > dateTo) {
// 			alert("To Date must be greater than From Date")
// 		      }
		      else {
				var from = $( "#datepickerFrom" ).datepicker( "getDate" );
				var fmonth = from.getMonth()+1;if (fmonth<10)fmonth="0"+fmonth;
				var fday = from.getDate();if (fday<10)fday="0"+fday;
				var fromString = from.getFullYear() + "-" + fmonth + "-" + fday;
	// 			var to = $( "#datepickerTo" ).datepicker( "getDate" );
				var to = new Date();
				var tmonth = to.getMonth()+1;if (tmonth<10)tmonth="0"+tmonth;
				var tday = to.getDate();if (tday<10)tday="0"+tday;
				var toString = to.getFullYear() + "-" + tmonth + "-" + tday;
				
	// 			alert(fromString+" "+toString);
				
				updateCalendar(selected_node_id, selected_node_name, fromString, toString);
		      }
				      
		      
		  });
		  
		  $( ".showCalendar" ).button().attr('disabled', true);
		  
		  $( ".showHistogram" ).button().click(function(){ 
		      var valFrom = $("#datepickerHistogramFrom").val();
		      
		      if(valFrom == null || valFrom == "undefined")
		      {
			  alert("From Date is not valid");
			  return;
		      }
		      
		      else {
// 			var from = $( "#datepickerHistogramFrom" ).datepicker( "getDate" );
// 			var fmonth = from.getMonth()+1;if (fmonth<10)fmonth="0"+fmonth;
// 			var fday = from.getDate();if (fday<10)fday="0"+fday;
// 			var fromString = from.getFullYear() + "-" + fmonth + "-" + fday;
// 			var to = new Date();
// 			var tmonth = to.getMonth()+1;if (month<10)month="0"+month;
// 			var tday = to.getDate();if (day<10)day="0"+day;
// 			var toString = to.getFullYear() + "-" + tmonth + "-" + tday;
		      
// 			alert(fromString+" "+toString);
			
// 			updateHistogram(fromString, toString);
			ajaxFun();
		      }
				      
		      
		  });

		  $( ".showHistogram" ).button().attr('disabled', true);
		  
		  var selectedMarkers = [];
		  var selectedRegions = [];
		  var sanitySuccess = [];
		  
		  var mapNodes = new jvm.WorldMap({
		  container: $('#world-map-nodes'),
		  map: 'world_mill_en',
		  backgroundColor: "white",
		  zoomOnScroll: false,
		  regionStyle: {
			initial: {
			  fill: '#999999',
			  "fill-opacity": 1,
			  stroke: 'none',
			  "stroke-width": 0,
			  "stroke-opacity": 1
			},
			hover: {
			  "fill-opacity": 0.8
			},
			selected: {
			      fill: '#002d67'
			},
			selectedHover: {
			}
		  },
		  markerStyle: {
			initial: {
			  fill: '#ff9900',
			  stroke: '#383f47'
			}
		  },
		  onMarkerClick: function(events, index) {
 // 		    alert(selectedMarkers[index].name);
		      var aTag = $("#table-title");
		      var position = aTag.offset().top-41;
		      $('html,body').animate({scrollTop:  position+ 'px'},'slow');
 /*// 		      console.log(aTag.offset().top+"--"+position);
		      
		      $('.field-service a').css('text-weight','normal');
		      $('.field-service a').css('color','#8C8C8C');
		      $('.'+selectedMarkers[index].id).css('text-weight','bold');
		      $('.'+selectedMarkers[index].id).css('color','black');*/	
		     
		      $('.row-status-service').addClass('collapsed');
		      $('#'+selectedMarkers[index].id).removeClass('collapsed');
		      $('#chart-cal').removeClass('chartHidden');
		      $('#chart-hist').hide();
		      $( ".showCalendar" ).button().attr('disabled', true);
		      updateCalendar(selectedMarkers[index].id, selectedMarkers[index].real_name, null, null);
		      onChartChange('chart-calendar');
		      selected_node_id = selectedMarkers[index].id;
		      selected_node_name = selectedMarkers[index].real_name;
		      $('#buttonShowAll').removeClass('collapsed');
		      $('#nodeLink a').attr("href", '<%= root_url(subdomain: "status.lab")%>'+"node/"+selectedMarkers[index].id)
		      $('#nodeLink').show();
		      
		      var nowDate = new Date();
// 		      var nmonth = nowDate.getMonth()+1;if (nmonth<10)nmonth="0"+nmonth;
// 		      var nday = nowDate.getDate();if (nday<10)nday="0"+nday;
// 		      var nowString = nowDate.getFullYear() + "-" + nmonth + "-" + nday;
// 		      $( "#datepickerTo" ).datepicker('setDate', nowString);
		      
		      nowDate.setMonth(nowDate.getMonth() - 3);
		      nmonth = nowDate.getMonth()+1;//if (nmonth<10)nmonth="0"+nmonth;
		      nday = nowDate.getDate();//if (nday<10)nday="0"+nday;
		      nowString = nowDate.getFullYear() + "-" + nmonth + "-" + nday;
		      $( "#datepickerFrom" ).datepicker('setDate', nowString);
// 		      d3.select('#chart_id')[0][0].value = 'chart-calendar';
		      
		      
		  },
		  onRegionClick: function(event, code) {
 
		     $('#world-map-nodes').vectorMap('set', 'focus', code);
		      
		      
		  }//,
		  /*series: {
			    regions: [{values: {"IT":20,"DE":90},
			  // attribute:'fill',
  //				      scale: ['#C8EEFF', '#0071A4'],
  // 					      scale: {
  // 							  84: '#4169E1',
  // 							  64: '#FF69B4'
  // 							},
  //				      normalizeFunction: 'linear'
			    }]
		  }	*/		     

		  });
		  
		  $('#world-map-nodes').vectorMap('set', 'focus', 1.7, 0.4, 0.5);
		  
		  $('#world-map-nodes').css('width',"100%");
// 		  $('.jvectormap-container svg').css('width',"100%");
// 		  $('.jvectormap-container svg').attr( "width", "100%" );
		  
		  //check and shift two map points too close 
		  function checkLatLong (points)
		  {
// 		      if(points.count <= 1) return points;
// 		      $.each(points, function( regionToCheckKey, regionToCheck )
// 		      {
// 			  $.each(points, function( regionKey, region )
// 			  {
// 			      if (regionToCheck["name"] != region["name"])
// 			      {
// 				if (Math.abs((regionToCheck["latLng"])[0] - (region["latLng"])[0]) < 0.2)
// 				  (regionToCheck["latLng"])[0] = (regionToCheck["latLng"])[0]+0.5
// 				
// 				if (Math.abs((regionToCheck["latLng"])[1] - (region["latLng"])[1]) < 0.2)
// 				  (regionToCheck["latLng"])[1] = (regionToCheck["latLng"])[1]+0.5
// 				
// 			      }
// 			  });
// 		      });

		    $.each(points, function( index, regionToCheck )
		    {
			if(regionToCheck["id"] == 'PiraeusN' && regionToCheck["latLng"] != null)
			{
			  (regionToCheck["latLng"])[0] = (regionToCheck["latLng"])[0]+0.5;
			  (regionToCheck["latLng"])[1] = (regionToCheck["latLng"])[1]-1;
			}
		    });
		    
		    return points;
		  }

		  function ajaxFunInit() { 
		  $("#imgServices").show();
		  $("#imgHistorical").show();
		  $.ajax (
			    {
				  type: "GET",
				  url: "../api/v1/region/totData",//to know how many regions
				  contentType: "application/json; charset=utf-8",
				  data: {},
				  dataType: "json",
				  cache: false,
				  success: function(json){
				  
				    var totData = json;
				    if(totData == null || totData == "undefined") return;
				    
				    selectedMarkers = [];
				    selectedRegions = [];
				    var markers = {};
				    
				    var idRegions = totData["total_regions_ids"];
				    var idRegionsCount = totData["total_regions_count"];
				    semaforo = parseInt(idRegionsCount);
// 				    $('#regionsNum').html(idRegionsCount);
				    //draw table with # empty raws
				    var allRows = "";
				    for (var i=0;i<idRegionsCount;i++)
				    {
					var theRegionId = totData["total_regions_ids"][i];
					allRows = allRows + "<DIV CLASS='status-row-min row-status-service row-status-closed' id='"+theRegionId+"'>"+
								  "<DIV CLASS='field field-group field-group-expand'>"+
									  "<IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>"+
								  "</DIV>"+"<a name=\""+theRegionId+"\"></a>"+
								  "<DIV CLASS='field field-service field-service-node-min "+theRegionId+"'></DIV>"+			
							  "</DIV><DIV CLASS='row-messageMin'><div style='overflow-y:auto; height:400px;width: 485px; height: 59px;' id='message-"+theRegionId+"'>Loading...</div></DIV>";
				    }
				    
				    $('#tableContent').html(allRows);
				    
				    
				    var height = $('#world-map-nodes').height()+$('#status').height()+80;
// 				    $('.wrapper').css("cssText", "height: "+height+"px !important;");
				    
				    $(".row-messageMin").hide();				  
				    $('.field-group-expand').click( function()
				    {
					    var $image = $(this).children();
					    if( $image.hasClass('collapse' ) )
					    {
						    $image.removeClass('collapse' );
						    $image.addClass('expand' );
					    }
					    else
					    {
						    $image.removeClass('expand' );
						    $image.addClass('collapse' );
					    }
					    var $parent = $(this).parent();
					    
					    var $message = $parent.next(".row-messageMin");
					    $message.slideToggle(function()
					    {
						    if( $parent.hasClass('row-status-closed' ) )
						    {
							    $parent.removeClass('row-status-closed' );
							    $parent.addClass('row-status-opened' );
						    }
						    else
						    {
							    $parent.removeClass('row-status-opened' );
							    $parent.addClass('row-status-closed' );
						    }
					    });
				    });
				    
				    var fromString = "";
				    
				    var from = $( "#datepickerHistogramFrom" ).val();
				    if(from != null && from != "undefined")
				    {
// 					var fmonth = from.getMonth()+1;if (fmonth<10)fmonth="0"+fmonth;
// 					var fday = from.getDate();if (fday<10)fday="0"+fday;
// 					fromString = from.getFullYear() + "-" + fmonth + "-" + fday;
					fromString = from + "-01";
				    }
				    else{
					var nowDate = new Date();
		      
					nowDate.setMonth(nowDate.getMonth() - 6);
					var fmonth = nowDate.getMonth()+1;//if (nmonth<10)nmonth="0"+nmonth;
					var fday = nowDate.getDate();//if (nday<10)nday="0"+nday;
					fromString = nowDate.getFullYear() + "-" + nmonth + "-" + nday;
				    }
				    var jsonToSend = {
					'histogramData' : {
					    'since' : fromString,
					    'aggregate' : "m"
					}
				    };
				    //for each region do:
				    $.each(idRegions, function( index, regionId ) {
				      $.ajax (
						    {
							  type: "POST",
							  url: "../api/v1/region/"+regionId,//to know name, lat and long of a region
							  contentType: "application/json; charset=utf-8",
							  data: JSON.stringify(jsonToSend),
							  dataType: "json",
							  cache: false,
							  success: function(json){
							  
							      var dataRegion = json;
// 							      
							      //for histogram chart
							      sanitySuccess.push({idNode: regionId, nameNode: dataRegion['name'], success: (dataRegion['percSanitySuccess']||0)});
// 							      var svg = d3.select($("#chart-histogram")[0]).select("svg").select("g");
// 							      svg.selectAll(".bar").remove();
// 							      svg.selectAll("text").remove();
// 							      svg.selectAll("line").remove();
							      histogram.update(sanitySuccess);
							      
							      //write regionName in each raw and put region data into array hash
							      $('.'+regionId).html("<a href='../node/"+regionId+"' CLASS='"+regionId+"' style='color:#8C8C8C;'>"+dataRegion["name"]+"</a>");	
// 							      console.log(dataRegion[name]);
							      markers[regionId] = null;
							      if(dataRegion['latitude']!= null && dataRegion['latitude'] != "undefined" &&  dataRegion['latitude'] != "" && dataRegion['longitude']!= null && dataRegion['longitude'] != "undefined" &&  dataRegion['longitude'] != "")
							      {
								var markersData = {};
								markersData["id"] =  regionId;
								markersData["latLng"] =  [parseFloat(dataRegion['latitude']),parseFloat(dataRegion['longitude'])];
								
								/*var actualTime = Math.floor(Date.now() / 1000)
								var deltaTime = 10800;
								
								var regionTime =( new Date(dataRegion['timestamp']).getTime() / 1000)
  // 							      console.log(regionId+":if("+actualTime+">("+regionTime+"+"+deltaTime+")");
								my_time=new Date(dataRegion['timestamp'])
								month=my_time.getMonth()+1;if (month<10)month="0"+month;
								day=my_time.getDate();if (day<10)day="0"+day;
								hours=my_time.getUTCHours();if (hours<10)hours="0"+hours;
								mins=my_time.getUTCMinutes();if (mins<10)mins="0"+mins;
								the_time=my_time.getFullYear() + "-" + month + "-" + day + "  " + hours + ":" + mins;					      
								
								if (actualTime>(regionTime+deltaTime))
								  markersData["name"]=dataRegion['name']+": Last Update on "+the_time;
								else*/ markersData["name"] = dataRegion['name'];
								
								markersData["real_name"] = dataRegion['name'];
								markersData["style"] = 'rgba(150,150,150,1)';	
								markers[regionId] = markersData; 
							      }						      
							      
							      
							      if(dataRegion['country']!= null && dataRegion['country'] != "undefined" &&  dataRegion['country'] != "")
							      {
									selectedRegions.push(dataRegion['country']);
							      }
							      mapNodes.clearSelectedRegions();
							      mapNodes.setSelectedRegions(selectedRegions);
							      
							      $.ajax (
							      {
								    type: "GET",
								    url: "../api/v1/region/services/"+regionId,//to know status services of the region
								    contentType: "application/json; charset=utf-8",
								    data: {},
								    dataType: "json",
								    cache: false,
								    success: function(json){
									
								      $('#loadingMap').removeClass();
								      $('#loadingMap').addClass('aftermaphide');
								      $("#imgServices").hide();
								      $("#imgHistorical").hide();
								      semaforo -= 1;
// 								      console.log(semaforo);
								      if(semaforo == 0) //loading has finished
								      {
									  $( ".showHistogram" ).button().attr('disabled', false);
								      }
								      
								      var services = json;
								      
								      var servicesNames = Object.keys(services);								      
								        
								      var statusColor;
// 								      if (actualTime>(regionTime+deltaTime)){
// 										statusColor = 'rgba(150,150,150,1)';
// 								      }
// 								      else{
									if(services['FiHealthStatus']!=null && 
									services['FiHealthStatus']!="undefined" &&
									services['FiHealthStatus']['value'] == 1)
									{
										switch (services['overallStatus']['value']) {
										case RED:    statusColor = 'rgba(255,0,0,1.0)';   break;
										case GREEN:  statusColor = 'rgba(0,255,0,1.0)';   break;
										case YELLOW: statusColor = 'rgba(255,255,0,1.0)'; break;
										default:     statusColor = 'rgba(150,150,150,1)';     /*gray*/
										}
									}
									else if(services['FiHealthStatus']!=null && 
									services['FiHealthStatus']!="undefined")
									{
										switch (services['FiHealthStatus']['value']) {
										case 0.0:    statusColor = 'rgba(255,0,0,1.0)';   break;
										case 1:  statusColor = 'rgba(0,255,0,1.0)';   break;
										case 0.75: statusColor = 'rgba(255,255,0,1.0)'; break;
										default:     statusColor = 'rgba(150,150,150,1)';     /*gray*/
										}
									}
									else statusColor = 'rgba(150,150,150,1)';     /*gray*/
// 								      }
								      
								      if(markers[regionId] != null)
								      {
										markers[regionId]["style"] = {fill: statusColor, r:5};
								      }
								      
	    // 							  selectedMarkers = $.map(markers, function(val, key) { return val; });
								      if(markers[regionId] != null)
								      {
										selectedMarkers.push(markers[regionId]);
								      }
								      if(regionId == "PiraeusN")
								      {
										selectedMarkers = checkLatLong(selectedMarkers);
								      }
	    // 							  console.log(selectedMarkers);
								      mapNodes.removeAllMarkers();
								      mapNodes.addMarkers(selectedMarkers);
								      
								      
								      //complete table with jira and services status
									
// 								      var colorValueOverall = services["overallStatus"]['value'];
								      var colorPng = "";/*colorValueOverall + "light.png";*/
								      
// 								      if (actualTime>(regionTime+deltaTime) || colorValueOverall == "undefined")colorPng="graylight.png";

								      var allSubRows = ""/*"<DIV CLASS='field field-service field-service-overall'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>"*/;
							  
								      $.each(servicesNames, function( index, value ) {
									      if(value != "overallStatus" && value != "FiHealthStatus")
									      {
										      colorPng = services[value]["value"]+"light.png";
// 										      console.log(regionId+":if("+actualTime+">("+regionTime+"+"+deltaTime+")");
// 										      if (actualTime>(regionTime+deltaTime) || services[value]["value"] == "undefined") 	{colorPng="graylight.png";}
										      if (services[value]["value"] == "undefined") 	{colorPng="graylight.png";}
										      allSubRows = allSubRows + "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>";
									      }
									      else if(value == "FiHealthStatus")
									      {
										      valuePng = services[value]["value"];
										      if(valuePng == "undefined")
											colorPng = "graylight.png";      
										      else if(valuePng == 1)
											colorPng = GREEN+"light.png";
										      else if (valuePng == 0.0)
											colorPng = RED+"light.png";
										      else if (valuePng == 0.75)
											colorPng = YELLOW+"light.png";
// 										      if (actualTime>(regionTime+deltaTime))colorPng="graylight.png";
										      allSubRows = allSubRows + "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>";
									      }
								      });
							  
								      var jira_url = services["overallStatus"]["jira_project_url"]
								      if( !jira_url) jira_url = "#";
								      
								      $("#"+regionId).append(allSubRows/*+"<DIV CLASS='field field-service field-service-status-support'>"+
										      "<img src=\"/assets/infographic/help.png\" height=\"30\" onclick=\"var theDialog = $('#atlScriptlet').data('regionSelected','"+regionId+"'); theDialog.dialog('open');\" style=\"cursor:pointer;\" title=\"Report an issue\" alt=\"Report an issue\"/>"+
										      "<img src=\"/assets/infographic/jira.png\" height=\"30\" onclick=\"window.location.href ='"+jira_url+"';\" style=\"cursor:pointer;\" title=\"Browse open issues\" alt=\"Browse open issues\"/>"+
									      "</DIV>"*/);
								     $("#message-"+regionId).html(services["overallStatus"]['description']);			      
								      
									
								    },
								    error: function(xhr, textStatus, errorThrown){
								    
								    semaforo -= 1;
								    if(semaforo == 0) //loading has finished
								    {
									$( ".showHistogram" ).button().attr('disabled', false);
								    }
								    $("#"+regionId).append("<!--<DIV CLASS='field field-service field-service-overall'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV>--><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><!--<DIV CLASS='field field-service field-service-status-support'>"+
										      "<img src=\"/assets/infographic/help.png\" height=\"30\" onclick=\"var theDialog = $('#atlScriptlet').data('regionSelected','"+regionId+"'); theDialog.dialog('open');\" style=\"cursor:pointer;\" title=\"Report an issue\" alt=\"Report an issue\"/>"+
										      "<!--<img src=\"/assets/infographic/jira.png\" height=\"30\" onclick=\"window.location.href =jira_url;\" style=\"cursor:pointer;\" title=\"Browse open issues\" alt=\"Browse open issues\"/>-->"+
									      "</DIV>-->");
								    
								    var statusColor = 'rgba(150,150,150,1)';							  
								    if(markers[regionId] != null)
								    {
									markers[regionId]["style"] = {fill: statusColor, r:5};
									selectedMarkers = $.map(markers, function(val, key) { return val; });
									selectedMarkers.push(markers[regionId]);
								    }
								    
	    // 							
								    if(regionId == "PiraeusN")
								    {
								      selectedMarkers = checkLatLong(selectedMarkers);
								    }
	    // 							console.log(selectedMarkers);
								    mapNodes.removeAllMarkers();
								    mapNodes.addMarkers(selectedMarkers);
								      
								    //put a symbol in the raw to show that it has failed
									var errore = "<%= FiLabInfographics.nodata %>";
									if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
										errore = xhr.responseText;
				  // 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
									$('#errorMessage').html(errore);
				    //     				alert('request failed->'+textStatus);
				    //     				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
								    } 
							      }
							    )
							  
							  },
							  error: function(xhr, textStatus, errorThrown){
							  semaforo -= 1;
							  if(semaforo == 0) //loading has finished
							  {
							      $( ".showHistogram" ).button().attr('disabled', false);
							      $('#loadingMap').removeClass();
								  $('#loadingMap').addClass('aftermaphide');
								  $("#imgServices").hide();
								  $("#imgHistorical").hide();
							  }
							  //put a symbol in the raw to show that it has failed
							      var errore = "<%= FiLabInfographics.nodata %>";
							      if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
								      errore = xhr.responseText;
			// 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
							      $('#errorMessage').html(errore);
							      
							      if(xhr.status==404)
							      {
									if(xhr.responseText)
									{
										var dataRegion = undefined
										try {
											var dataRegion = $.parseJSON(xhr.responseText);
    										} catch (e) {
    											// error
  										}
  
										if(dataRegion && dataRegion!="undefined")
										{
											var ttl = (parseInt(dataRegion['ttl'])/60)/60;
											var name = dataRegion['name'] || regionId;
											var data = dataRegion['data'];
// 											console.log(dataRegion);

							
											if(data && data!="undefined")
											{
												var markersData = {};
												markersData["id"] =  regionId;
												markersData["latLng"] =  [parseFloat(data[1]),parseFloat(data[2])];
												
												
												markersData["name"] = name+": No updated data in the last "+ttl+" hours";
						
												markersData["real_name"] = name;
												markersData["style"] = {fill: 'rgba(150,150,150,1)', r:5};	
												markers[regionId] = markersData;
	// 											console.log(markers[regionId]);
												selectedMarkers.push(markers[regionId]);
	// 											console.log(selectedMarkers);
												if(regionId == "PiraeusN")
												{
													selectedMarkers = checkLatLong(selectedMarkers);
												}
										
												mapNodes.removeAllMarkers();
												mapNodes.addMarkers(selectedMarkers);
	// 											console.log(selectedMarkers);
										
												if(data[0]!= null && data[0] != "undefined" &&  data[0] != "")
												{
													selectedRegions.push(data[0]);
												}
	// 											console.log(selectedRegions);
												mapNodes.clearSelectedRegions();
												mapNodes.setSelectedRegions(selectedRegions);
											}
											
// 											console.log(selectedRegions);
								
											/*$('.'+regionId).width("70%");
											$('.'+regionId).html(regionId+" <img class='sprite status-2' />");	*/		
											$('.'+regionId).html("<a href='../node/"+regionId+"' CLASS='"+regionId+"' style='color:#8C8C8C;'>"+name+"</a>");
											$("#"+regionId).append("<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV>");
											
// 											<div class="status-row-min row-status-service row-status-closed" id="SophiaAntipolis2"><div class="field field-group field-group-expand"><img class="field-group-expand-icon sprite expand" src="/assets/infographic/blank.gif"></div><a name="SophiaAntipolis2"></a><div class="field field-service field-service-node-min SophiaAntipolis2"><a href="../node/SophiaAntipolis2" class="SophiaAntipolis2" style="color:#8C8C8C;">SophiaAntipolis</a></div><div class="field field-service field-service-status-field"><img src="/assets/infographic/greenlight.png" height="25"></div><div class="field field-service field-service-status-field"><img src="/assets/infographic/greenlight.png" height="25"></div><div class="field field-service field-service-status-field"><img src="/assets/infographic/greenlight.png" height="25"></div><div class="field field-service field-service-status-field"><img src="/assets/infographic/greenlight.png" height="25"></div><div class="field field-service field-service-status-field"><img src="/assets/infographic/greenlight.png" height="25"></div><div class="field field-service field-service-status-field"><img src="/assets/infographic/greenlight.png" height="25"></div></div>
											
											
											if(ttl)
												$('#message-'+regionId).html("No updated data in the last "+ttl+" hours");
											else
												$('#message-'+regionId).html("No updated data were found");
										}
										else
										{
											$('.'+regionId).html("<a href='../node/"+regionId+"' CLASS='"+regionId+"' style='color:#8C8C8C;'>"+regionId+"</a>");
											$("#"+regionId).append("<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV>");
											$('#message-'+regionId).html("No updated data were found");
										}
									}
								      	else
									{
								      		$('.'+regionId).html("<a href='../node/"+regionId+"' CLASS='"+regionId+"' style='color:#8C8C8C;'>"+regionId+"</a>");
										$("#"+regionId).append("<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV>");
										$('#message-'+regionId).html("No updated data were found");
									}
							      }
			  //     				alert('request failed->'+textStatus);
			  //     				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
							  } 
						    }
					    )
				    });	  
				   
				  
				  },
				  error: function(xhr, textStatus, errorThrown){
				      semaforo = 0;
				      var errore = "<%= FiLabInfographics.nodata %>";
				      if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
					      errore = xhr.responseText;
// 				      $('#tableHeaderContent').html("<DIV CLASS='field field-header'>"+errore+"</DIV>");
				      $('#errorMessage').html(errore);
				      $("#imgServices").hide();
				      $("#imgHistorical").hide();
  //     				alert('request failed->'+textStatus);
  //     				console.log(xhr.status + ' çççç'+xhr.body+'òòòò' + textStatus + ' ' + errorThrown);
				  } 
			    }
			  )
		  };
		  
		  function ajaxFun() { 
		  if(semaforo > 0) 
		  {
// 		    console.log("AAAAAAancora no!!! "+semaforo);
		    return;
		  }
		  semaforo = 1;
		  $("#imgServices").show();
		  $("#imgHistorical").show();
		
		
		  var fromString = "";
				    
		  var from = $( "#datepickerHistogramFrom" ).val();
		  if(from != null && from != "undefined")
		  {
// 					var fmonth = from.getMonth()+1;if (fmonth<10)fmonth="0"+fmonth;
// 					var fday = from.getDate();if (fday<10)fday="0"+fday;
// 					fromString = from.getFullYear() + "-" + fmonth + "-" + fday;
		      fromString = from + "-01";
		  }
		  else{
		      var nowDate = new Date();
    
		      nowDate.setMonth(nowDate.getMonth() - 6);
		      var fmonth = nowDate.getMonth()+1;//if (nmonth<10)nmonth="0"+nmonth;
		      var fday = nowDate.getDate();//if (nday<10)nday="0"+nday;
		      fromString = nowDate.getFullYear() + "-" + nmonth + "-" + nday;
		  }
		  var jsonToSend = {
		      'histogramData' : {
			  'since' : fromString,
			  'aggregate' : "m"
		      }
		  };
		  
		  $( ".showHistogram" ).button().attr('disabled', true);
		  
		  $.ajax (
			    {
				  type: "POST",
				  url: "../api/v1/region/services",
				  contentType: "application/json; charset=utf-8",
				  data: JSON.stringify(jsonToSend),
				  dataType: "json",
				  cache: false,
				  success: function(json){
				  
					  semaforo = 0;
					  
					  $( ".showHistogram" ).button().attr('disabled', false);
					  
					  //in case first ajax call failed, loading background will be removed now
					  $('#loadingMap').removeClass();
					  $('#loadingMap').addClass('aftermaphide');
					  
					  var allHeaders = "";
					  var allRows = "";
					  var servicesNames = [];
					  selectedMarkers = [];
					  selectedRegions = [];
					  sanitySuccess = [];
				        /*  var actualTime = Math.floor(Date.now() / 1000)
                                          var deltaTime = 10800;	*/  
//                       console.log(json);
					  $.each(json, function(idRegion, regionAttributes) {
						  if(regionAttributes == null || regionAttributes["ttl"] != null)
						  {						    
							if(regionAttributes == null)
							{
								allRows = allRows + "<DIV CLASS='status-row-min row-status-service row-status-closed' id='"+idRegion+"'>"+
								  "<DIV CLASS='field field-group field-group-expand'>"+
									  "<IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>"+
								  "</DIV>"+"<a name=\""+idRegion+"\"></a>"+
								  "<DIV CLASS='field field-service field-service-node-min "+idRegion+"'><a href='../node/"+idRegion+"' CLASS='"+idRegion+"' style='color:#8C8C8C;'>"+idRegion+"</a></DIV>"+			
							  "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV></DIV><DIV CLASS='row-messageMin'><div style='overflow-y:auto; height:400px;width: 485px; height: 59px;' id='message-"+idRegion+"'>No updated data were found.</div></DIV>";
							}
							else
							{
								var ttl = (parseInt(regionAttributes['ttl'])/60)/60;
								var name = regionAttributes['name'] || idRegion;
	// 											console.log(dataRegion);

				
								if(regionAttributes['latitude'] && regionAttributes['longitude'])
								{
									var markersData = {};
									markersData["id"] =  idRegion;
									markersData["latLng"] =  [parseFloat(regionAttributes['latitude']),parseFloat(regionAttributes['longitude'])];
									
									
									markersData["name"] = name+": No updated data in the last "+ttl+" hours";
			
									markersData["real_name"] = name;
									markersData["style"] = {fill: 'rgba(150,150,150,1)', r:5};	
	// 											console.log(markers[regionId]);
									selectedMarkers.push(markersData);
	// 											console.log(selectedMarkers);
									if(idRegion == "PiraeusN")
									{
										selectedMarkers = checkLatLong(selectedMarkers);
									}

	// 											console.log(selectedMarkers);
							
									if(regionAttributes['country']!= null && regionAttributes['country'] != "undefined" &&  regionAttributes['country'] != "")
									{
										selectedRegions.push(regionAttributes['country']);
									}
								}	
								
								allRows = allRows + "<DIV CLASS='status-row-min row-status-service row-status-closed' id='"+idRegion+"'>"+
								  "<DIV CLASS='field field-group field-group-expand'>"+
									  "<IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>"+
								  "</DIV>"+"<a name=\""+idRegion+"\"></a>"+
								  "<DIV CLASS='field field-service field-service-node-min "+idRegion+"'><a href='../node/"+idRegion+"' CLASS='"+idRegion+"' style='color:#8C8C8C;'>"+name+"</a></DIV>"+			
							  "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV></DIV><DIV CLASS='row-messageMin'><div style='overflow-y:auto; height:400px;width: 485px; height: 59px;' id='message-"+idRegion+"'>No updated data in the last "+ttl+" hours.</div></DIV>";
							}
							  
// 							  $('.'+regionId).html("<a href='../node/"+regionId+"' CLASS='"+regionId+"' style='color:#8C8C8C;'>"+name+"</a>");
// 											$("#"+regionId).append("<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV><DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/graylight.png\" height=\"25\"/></DIV>");
				    
// 							 $('.'+idRegion).html("<div CLASS='"+idRegion+"' style='color:#8C8C8C;'>"+idRegion+" <img class='sprite status-2' /></div>");
// 							 $('#message-'+idRegion).html("");
						  }
						  else if(idRegion != null && regionAttributes != null && regionAttributes["services"]!=null)
						  {
							  if(regionAttributes["services"] != null)
								servicesNames = Object.keys(regionAttributes["services"]);//I will get Nova,Cinder,...
							  //for histogram chart
							  sanitySuccess.push({idNode: idRegion, nameNode: regionAttributes['name'], success: (regionAttributes['percSanitySuccess']||0)});
                                                          //var my_time=new Date(regionAttributes['timestamp'])   
                                                          if(regionAttributes['country']!= null && regionAttributes['country'] != "undefined" &&  regionAttributes['country'] != "")
							  {
							      selectedRegions.push(regionAttributes['country']);	
                                                          }
                                                          
                                                          if(regionAttributes['latitude']!= null && regionAttributes['latitude'] != "undefined" &&  regionAttributes['latitude'] != "" && regionAttributes['longitude']!= null && regionAttributes['longitude'] != "undefined" &&  regionAttributes['longitude'] != "")
							  {
								
							      var markers = {};
							      markers["id"] =  idRegion;
							      markers["latLng"] =  [parseFloat(regionAttributes['latitude']),parseFloat(regionAttributes['longitude'])];
							      regionTime =( new Date(regionAttributes['timestamp']).getTime() / 1000)

							      //markers["name"] = idRegion;							  
// 							      my_time=new Date(regionAttributes['timestamp']);                                                          
// 							      month=my_time.getMonth()+1;if (month<10)month="0"+month;
// 							      day=my_time.getDate();if (day<10)day="0"+day;
// 							      hours=my_time.getUTCHours();if (hours<10)hours="0"+hours;
// 							      mins=my_time.getUTCMinutes();if (mins<10)mins="0"+mins;
// 							      the_time=my_time.getFullYear() + "-" + month + "-" + day + "  " + hours + ":" + mins;
							      //markers["name"]=regionAttributes['name'];
							      /*if (actualTime>(regionTime+deltaTime))
									markers["name"]=regionAttributes['name']+": Last Update on "+the_time;
							      else */markers["name"]=regionAttributes['name'];
							      markers["real_name"]=regionAttributes['name'];
							      var statusColor;
// 							      if (actualTime>(regionTime+deltaTime)){
// 								statusColor = 'rgba(150,150,150,1)';
// 							      }
// 							      else{
								if(regionAttributes['services']['FiHealthStatus']!=null && 
								regionAttributes['services']['FiHealthStatus']!="undefined" &&
								regionAttributes['services']['FiHealthStatus']['value'] == 1)
								{
								    switch (regionAttributes['services']['overallStatus']['value']) {
									  case RED:    statusColor = 'rgba(255,0,0,1.0)';   break;
									  case GREEN:  statusColor = 'rgba(0,255,0,1.0)';   break;
									  case YELLOW: statusColor = 'rgba(255,255,0,1.0)'; break;
									  default:     statusColor = 'rgba(150,150,150,1)';     /*gray*/
								    }
								}
								else if(regionAttributes['services']['FiHealthStatus']!=null && 
								regionAttributes['services']['FiHealthStatus']!="undefined")
								{
								    switch (regionAttributes['services']['FiHealthStatus']['value']) {
									  case 0.0:    statusColor = 'rgba(255,0,0,1.0)';   break;
									  case 1:  statusColor = 'rgba(0,255,0,1.0)';   break;
									  case 0.75: statusColor = 'rgba(255,255,0,1.0)'; break;
									  default:     statusColor = 'rgba(150,150,150,1)';     /*gray*/
								    }
								}
								else statusColor = 'rgba(150,150,150,1)';     /*gray*/
// 							      }
							      markers["style"] = {fill: statusColor, r:5};
							      selectedMarkers.push(markers);
							  }
							  
							  
							  var allSubRows = "";
							  
// 							  var colorValueOverall = regionAttributes["services"]["overallStatus"]['value'];
							  var colorPng = "";/*colorValueOverall + "light.png";*/
//                                                           if (actualTime>(regionTime+deltaTime) || colorValueOverall == "undefined")colorPng="graylight.png";

// 							  allSubRows = "<DIV CLASS='field field-service field-service-overall'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>" + allSubRows;
							  
							  $.each(servicesNames, function( index, value ) {
								  if(value != "overallStatus" && value != "FiHealthStatus")
								  {
									  colorPng = regionAttributes["services"][value]["value"]+"light.png";
//                                                                           if (actualTime>(regionTime+deltaTime) || regionAttributes["services"][value]["value"] == "undefined") {colorPng="graylight.png";}
									  if (regionAttributes["services"][value]["value"] == "undefined") {colorPng="graylight.png";}
									  allSubRows = allSubRows + "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>";
								  }
								  else if(value == "FiHealthStatus")
								  {
									  valuePng = regionAttributes["services"][value]["value"];
									  
									  if(valuePng == "undefined")
									    colorPng = "graylight.png";
									  if(valuePng == 1)
									    colorPng = GREEN+"light.png";
									  else if (valuePng == 0.0)
									    colorPng = RED+"light.png";
									  else if (valuePng == 0.75)
									    colorPng = YELLOW+"light.png";
//                                                                           if (actualTime>(regionTime+deltaTime))colorPng="graylight.png";
									  allSubRows = allSubRows + "<DIV CLASS='field field-service field-service-status-field'><img src=\"/assets/infographic/"+colorPng+"\" height=\"25\"/></DIV>";
								  }
							  });
							  
							  var jira_url = regionAttributes["services"]["overallStatus"]["jira_project_url"]
							  if( !jira_url) jira_url = "#";
							  
							  allRows = allRows + "<DIV id='"+idRegion+"' CLASS='status-row-min row-status-service row-status-closed'>"+
								  "<DIV CLASS='field field-group field-group-expand'>"+
									  "<IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>"+
								  "</DIV>"+"<a name=\""+idRegion+"\"></a>"+
								  "<DIV CLASS='field field-service field-service-node-min'><a href='../node/"+idRegion+"' CLASS='"+idRegion+"' style='color:#8C8C8C;'>"+regionAttributes['name']+"</a></DIV>"+
								  
								  allSubRows+/*encodeURIComponent(JSON.stringify(regionAttributes["allNodes"]))*/
								  
//								  "<DIV CLASS='field field-service field-service-status-support'>"+
//									  "<img src=\"/assets/infographic/help.png\" height=\"30\" onclick=\"var theDialog = $('#atlScriptlet').data('regionSelected','"+idRegion+"'); theDialog.dialog('open');\" style=\"cursor:pointer;\" title=\"Report an issue\" alt=\"Report an issue\"/>"+
//									  "<img src=\"/assets/infographic/jira.png\" height=\"30\" onclick=\"window.location.href ='"+jira_url+"';\" style=\"cursor:pointer;\" title=\"Browse open issues\" alt=\"Browse open issues\"/>"+
//								  "</DIV>"+			
							  "</DIV>"+
							  "<DIV CLASS='row-messageMin'>"+
								  regionAttributes["services"]["overallStatus"]['description']+
							  "</DIV>";
						  }
						  
						  /*var allSubHeaders = "";
						  $.each(servicesNames, function( index, value ) {
							  if(value != "overallStatus")
							  {
								  allSubHeaders = allSubHeaders + "<DIV CLASS='field field-header field-header-service'>"+value+"</DIV>";
							  }
						  });
							 */ 
// 						  allHeaders = "<DIV CLASS='field field-header field-header-node'>Node</DIV>"+
// 						  "<DIV CLASS='field field-header field-header-overall'>Overall</DIV>"+
// 						  
// 						  allSubHeaders+
// 						  
// 						  "<DIV CLASS='field field-header field-header-support'>Support</DIV>";
// 						  
// 						  $('#tableHeaderContent').html(allHeaders);
						  
// 						  $('.wrapper').css("cssText", "height: "+height+"px !important;");
						  
						  
					  });
					  
					  $('#tableContent').html(allRows);
	// 					$('#buttonShowAll').addClass('collapsed');
						console.log(selected_chart_id);
						if(selected_chart_id == 'chart-calendar' && selected_node_id)
						{
						$('.row-status-service').addClass('collapsed');
						$('#'+selected_node_id).removeClass('collapsed');
						}
	// 						  onChartChange('chart-histogram');
						$('#errorMessage').html("");
						
						var height = $('#world-map-nodes').height()+$('#status').height()+80;
					  
					  mapNodes.clearSelectedRegions();
					  mapNodes.setSelectedRegions(selectedRegions);
					  mapNodes.removeAllMarkers();
					  mapNodes.addMarkers(selectedMarkers);					  
					  histogram.update(sanitySuccess);
					  
					  $(".row-messageMin").hide();
					  $('.field-group-federation').click( function()
					  {
						  var $image = $(this).children();
						  if( $image.hasClass('collapse' ) )
						  {
							  $image.removeClass('collapse' );
							  $image.addClass('expand' );
						  }
						  else
						  {
							  $image.removeClass('expand' );
							  $image.addClass('collapse' );
						  }
						  var $parent = $(this).parent();
						  
						  var $message = $parent.next(".row-messageMin");
						  $message.slideToggle(function()
						  {
							  if( $parent.hasClass('row-status-closed' ) )
							  {
								  $parent.removeClass('row-status-closed' );
								  $parent.addClass('row-status-opened' );
							  }
							  else
							  {
								  $parent.removeClass('row-status-opened' );
								  $parent.addClass('row-status-closed' );
							  }
						  });
					  });
					  $('.field-group-expand').click( function()
					  {
						  var $image = $(this).children();
						  if( $image.hasClass('collapse' ) )
						  {
							  $image.removeClass('collapse' );
							  $image.addClass('expand' );
						  }
						  else
						  {
							  $image.removeClass('expand' );
							  $image.addClass('collapse' );
						  }
						  var $parent = $(this).parent();
						  
						  var $message = $parent.next(".row-messageMin");
						  $message.slideToggle(function()
						  {
							  if( $parent.hasClass('row-status-closed' ) )
							  {
								  $parent.removeClass('row-status-closed' );
								  $parent.addClass('row-status-opened' );
							  }
							  else
							  {
								  $parent.removeClass('row-status-opened' );
								  $parent.addClass('row-status-closed' );
							  }
						  });
					  });
					  
				    $("#imgServices").hide();
				    $("#imgHistorical").hide();  
				  },
				  error: function(xhr, textStatus, errorThrown){
				      semaforo = 0;
				      $( ".showHistogram" ).button().attr('disabled', false);
				      var errore = "<%= FiLabInfographics.nodata %>";
				      if(xhr.responseText != null && xhr.responseText != "" && xhr.responseText != "null")
					      errore = xhr.responseText;
				      $('#errorMessage').html(errore);
				      $("#imgServices").hide();
				      $("#imgHistorical").hide();
				  } 
			    }
			      
		  )};

		
		//Chiamo il mio ajax la prima volta
		ajaxFunInit();
		//e poi lo richiamo dopo 5 minuti
		setInterval(function(){ajaxFun()}, 300000);
	  });
			    		  
  </script>
<% end %>
